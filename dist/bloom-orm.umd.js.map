{"version":3,"file":"bloom-orm.umd.js","sources":["../src/queryUtils.js","../src/schema.js","../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../src/modelBase.js","../src/models/array.js","../src/modelProxy.js","../src/main.js"],"sourcesContent":["/**\r\n * This is the default implementation of a query ascending behaviour.\r\n * Usually, custom models may replace this function generate their internal\r\n * query language.\r\n * @example\r\n * // used on a fetch query on some model.\r\n * model.fetch({ orderby: r => asc(r.id) });\r\n * @param {string} col The column to order in ascending order\r\n * @returns {function} A comparison function to use between two objects\r\n */\r\nexport function asc(col) {\r\n    return function (a, b) {\r\n        return a[col] - b[col];\r\n    }\r\n}\r\n\r\n/**\r\n * This is the default implementation of a query descending behaviour.\r\n * Usually, custom models may replace this function generate their internal\r\n * query language.\r\n * @example\r\n * // used on a fetch query on some model.\r\n * model.fetch({ orderby: r => desc(r.id) });\r\n * @param {string} col The column to order in descending order\r\n * @returns {function} A comparison function to use between two objects\r\n */\r\nexport function desc(col) {\r\n    return function (a, b) {\r\n        return b[col] - a[col];\r\n    }\r\n}\r\n\r\n/**\r\n * Helper function. It accumulates an array of asc or desc calls to implement\r\n * multi column sorting for local stores. It is usually used internally and should\r\n * not be used outside of building custom models.\r\n * @example\r\n * // multi column sorting\r\n * [\r\n *  {a: 1, b:1}, \r\n *  {a:1, b: 2}, \r\n *  {a: 2, b:1}, \r\n *  {a: 2, b: 2}\r\n * ].sort(multiColSort([asc('a'), desc('b')]))\r\n * // result:\r\n * [\r\n *  {a: 1, b: 2},\r\n *  {a: 1, b: 1},\r\n *  {a: 2, b: 2},\r\n *  {a: 2, b: 1}\r\n * ]\r\n * @param {Array} orderby An array or single asc/desc function to accumulate\r\n * @returns {function} A comparison function which combines the provided array of sort functions.\r\n */\r\nexport function multiColSort(orderby) {\r\n    if (orderby.constructor !== Array) {\r\n        orderby = [orderby];\r\n    }\r\n\r\n    let fn = orderby.shift();\r\n    return function (a, b) {\r\n        let result = fn(a, b);\r\n        if (result === 0 && orderby.length > 0) {\r\n            return multiColSort(orderby)(a, b);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} fn A value to test if is considered an arrow function.\r\n * @returns {boolean} true or false\r\n */\r\nexport function isArrowFunction(fn) {\r\n    let fnSrc = fn.toString();\r\n    return (/^\\s*(\\(\\s*\\)|\\([a-z0-9_=,\\s+\\{\\}\\.]+\\)|[a-z0-9_\\.]+)\\s*=>.+/).test(fnSrc);\r\n}","// TODO: Implement model schema definitions to automate validation\r\nexport class Schema {\r\n    constructor(options) {\r\n        this.options = options;\r\n    }\r\n\r\n    validate(field, value) {\r\n        // TODO: validate agaisnt json schema\r\n    }\r\n}","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import { EventEmitter } from 'events';\r\n\r\n/**\r\n * Base Model abstract class. All models should implement all methods on this class.\r\n * @extends EventEmitter\r\n */\r\nexport class ModelBase extends EventEmitter{\r\n    /**\r\n     * \r\n     * @param {*} options\r\n     */\r\n    constructor(options) {\r\n        super();\r\n        this.options = options;\r\n    }\r\n\r\n    /**\r\n     * @returns true if connected.\r\n     */\r\n    get isConnected() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Connects the model to its backend.\r\n     * @param {*} data Any object to pass along when Promise chained.\r\n     * @returns {Promise} A promise resolved once the model's backend is connected.\r\n     */\r\n    async connect(data) {\r\n        return new Promise.resolve(data);\r\n    }\r\n\r\n    /**\r\n     * Disconnects the model from its backend\r\n     * @param {*} data Any object to pass along when Promise chained.\r\n     * @returns {Promise} A promise resolved once the model's backend is disconnected.\r\n     */\r\n    async disconnect(data) {\r\n        return new Promise.resolve(data);\r\n    }\r\n\r\n    /**\r\n     * Data fetch method. Accepts either a 'where' arrow function or more complex\r\n     * object containing where, orderby, start, limit options.\r\n     * @param {*} query \r\n     */\r\n    async fetch(query) {\r\n        return new Promise.resolve({ rows: [], total: 0 });\r\n    }\r\n\r\n    /**\r\n     * Updates an array of data\r\n     * @param {Array} rows\r\n     * @returns {Promise}\r\n     */\r\n    async update(rows) {\r\n        return new Promise.resolve({ rows: [] });\r\n    }\r\n\r\n    /**\r\n     * Creates a list of records.\r\n     * @param {Array} rows \r\n     * @returns {Promise} List of records created.\r\n     */\r\n    async create(rows) {\r\n        return new Promise.resolve({ rows: [] });\r\n    }\r\n\r\n    /**\r\n     * Delete records by ids\r\n     * @param {Array} ids The records ids to delete.\r\n     * @returns {Promise}\r\n     */\r\n    async delete(rows) {\r\n        return new Promise.resolve({ rows: [] });\r\n    }\r\n\r\n}","import { asc, desc, multiColSort } from '../queryUtils';\r\nimport { ModelBase } from '../modelBase';\r\n\r\n/**\r\n * Reference model implementation based on simple object arrays\r\n * @extends ModelBase\r\n */\r\nexport class ArrayModel extends ModelBase {\r\n    constructor(options) {\r\n        super(options);\r\n        this._data = this.options.data;\r\n        this._connected = false;\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean} true when connected\r\n     * @override\r\n     */\r\n    get isConnected() {\r\n        return this._connected;\r\n    }\r\n\r\n    /**\r\n     * To simulate and stay api compliant, this model implements connecting/disconnecting behaviour.\r\n     * @param {*} data \r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async connect(data) {\r\n        return new Promise(resolve => {\r\n            this._connected = true;\r\n            return resolve(data)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * To simulate and stay api compliant, this model implements connecting/disconnecting behaviour.\r\n     * @param {*} data \r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async disconnect(data) {\r\n        return new Promise(resolve => {\r\n            this._connected = false;\r\n            return resolve(data)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetches rows using where, order, start and limit query parameters\r\n     * @param {*} query An object containing a set of query definitions.\r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async fetch({ where, orderby, start, limit }) {\r\n        return new Promise(success => {\r\n            let result = {\r\n                rows: [],\r\n                total: 100\r\n            }\r\n\r\n            if (start === undefined) { start = 0 }\r\n            if (limit === undefined) { limit = 20 }\r\n\r\n            let count = 0;\r\n            for (let i = 0; i < this._data.length; i++) {\r\n                let row = Object.assign({}, this._data[i]);\r\n\r\n                let matchCondition = where ? where(row) : true;\r\n                if (matchCondition) {\r\n                    result.rows.push(row);\r\n                }\r\n            }\r\n\r\n            let rowFields = {\r\n                id: 'id',\r\n                value: 'value',\r\n                description: 'description',\r\n                updated: 'updated'\r\n            }\r\n\r\n            if (orderby) {\r\n                result.rows = result.rows.sort(multiColSort(orderby(rowFields, asc, desc)));\r\n            }\r\n\r\n            result.rows = result.rows.slice(start, start + limit);\r\n\r\n            return success(result);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates rows provided by passing an object containing a \"rows\" array property.\r\n     * @param {*} data Object containing rows in a \"rows\" property\r\n     * @returns {Promise} Returns the provided data with the rows updated.\r\n     * @override\r\n     */\r\n    async update(data) {\r\n        return new Promise(success => {\r\n            data.rows.forEach(row => {\r\n\r\n                this._data.find((r, i) => {\r\n                    if (r.id == row.id) {\r\n                        this._data[i] = row;\r\n                        return true;\r\n                    }\r\n                })\r\n\r\n            });\r\n            return success(data);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Deletes all records matching the provided ids.\r\n     * @param {Array} ids \r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async delete(ids) {\r\n        return new Promise(success => {\r\n            ids.forEach((id) => {\r\n                this._data.find((r, i) => {\r\n                    if (r.id == id) {\r\n                        this._data.splice(i, 1);\r\n                        return true;\r\n                    }\r\n                });\r\n            })\r\n\r\n            return success(ids);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates all the records provided. Returning the same records updated with their identifier.\r\n     * @param {Array} rows Array of records to create\r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async create(rows) {\r\n        return new Promise(success => {\r\n            let lastId = this._data[this._data.length - 1].id;\r\n            rows.forEach((row, i) => {\r\n                row.id = ++lastId;\r\n                this._data.push(row);\r\n            });\r\n\r\n            success({ rows });\r\n        });\r\n    }\r\n\r\n}","import { isArrowFunction } from './queryUtils';\r\nimport { ModelBase } from './modelBase';\r\n\r\n/**\r\n * A convenient event argument container that allows async processing for subscribing events.\r\n * @example\r\n * // simple event\r\n * let EventEmitter = require('event');\r\n * let emitter = new EventEmitter();\r\n * let e = new AsyncEvent('myevent', emitter, { a: 1});\r\n * emitter.on('myevent', e => {\r\n *   // emulate a long running promise,\r\n *   // any event that requies pausing further flow can insert a promise.\r\n *   e.await(new Promise(resolve => {\r\n *     setTimeout(resolve, 5000);\r\n *   }));\r\n * })\r\n * \r\n * // triggers events and waits until all event promises resolve\r\n * e.wait().then(() => {\r\n *  console.log(\"Called after all event promises are resolved\");\r\n * })\r\n */\r\nexport class AsyncEvent {\r\n\r\n    /**\r\n     * \r\n     * @param {string} eventName Event Name.\r\n     * @param {*} base EventHandler instance to trigger event in behalve of.\r\n     * @param {*} args Event arguments to pass during event trigger.\r\n     */\r\n    constructor(eventName, base, args={}) {\r\n        this._base = base;\r\n        this.args = args;\r\n        this._promises = [];\r\n        this._eventName = eventName;\r\n    }\r\n\r\n    /**\r\n     * If an event handler needs to run a long running process, this method\r\n     * allows them the insert a promise into a wait queue so implementing code\r\n     * can wait for these promises to resolve or be rejected.\r\n     * @param {Promise} promise A promise to add to our wait list\r\n     */\r\n    await(promise) {\r\n        this._promises.push(promise);\r\n    }\r\n\r\n    /**\r\n     * If event handlers added long running promisses through the await function this method can be used\r\n     * to chain more processes that should only run after these event promises have resolved.\r\n     * @param {*} data A convenient way to enable this method to be chained. \r\n     *                 Any data passed will be passed along untouched down at the end of the wait promise.\r\n     * @returns {Promise} A promise which will pass the provided data object if passed.\r\n     */\r\n    wait(data) {\r\n        this._base.emit(this._eventName, {\r\n            name: this._eventName,\r\n            target: this._base,\r\n            args: this.args,\r\n            await: this.await.bind(this)\r\n        });\r\n        return Promise.all(this._promises).then(() => data);\r\n    }\r\n}\r\n\r\n/**\r\n * A model facade class that encapsulates promise handling and connection management.\r\n * @extends ModelBase\r\n */\r\nexport class ModelProxy extends ModelBase {\r\n\r\n    /**\r\n     * \r\n     * @param {*} options Model configuration\r\n     * @param {string} options.adapter Adapter to load or instantiate.\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        this.options = Object.assign({\r\n        }, options);\r\n\r\n        if (typeof options.model == 'string') {\r\n            this._model = new require(options.model)(options);\r\n        } else {\r\n            this._model = new options.model(options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Connects the model to its backend.\r\n     * @param {*} data Any object to pass along when Promise chained.\r\n     * @fires beforeConnect Before connecting event.\r\n     * @fires afterConnect After connecting event.\r\n     * @returns {Promise} A promise resolved once the model's backend is connected.\r\n     */\r\n    async connect(data) {\r\n        /**\r\n         * Before connecting\r\n         * @event ModelProxy#beforeConnect\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeConnectEvent = new AsyncEvent('beforeConnect', this, {});\r\n\r\n        /**\r\n         * After connecting\r\n         * @event ModelProxy#afterConnect\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        return beforeConnectEvent.wait(data)\r\n            .then(data => this._model.connect(data))\r\n            .then(data => new AsyncEvent('afterConnect', this, {}).wait(data))\r\n    }\r\n\r\n    /**\r\n     * Disconnects the model from its backend\r\n     * @param {*} data Any object to pass along when Promise chained.\r\n     * @fires beforeDisconnect Before disconnecting event.\r\n     * @fires afterDisconnect After disconnecting event.\r\n     * @returns {Promise} A promise resolved once the model's backend is disconnected.\r\n     */\r\n    async disconnect(data) {\r\n        /**\r\n         * Before disconnecting\r\n         * @event ModelProxy#beforeDisconnect\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeDisconnectEvent = new AsyncEvent('beforeDisconnect', this, {});\r\n\r\n        /**\r\n         * After disconnecting\r\n         * @event ModelProxy#aftereDisconnect\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        return beforeDisconnectEvent.wait(data)\r\n            .then(data => this._model.disconnect(data))\r\n            .then(data => new AsyncEvent('afterDisconnect', this, {}).wait(data))\r\n    }\r\n\r\n    /**\r\n     * Data fetch method. Accepts either a 'where' arrow function or more complex\r\n     * object containing where, orderby, start, limit options.\r\n     * @param {*} query \r\n     * @fires beforeFetch Before disconnecting event.\r\n     * @fires afterFetch After disconnecting event.\r\n     * @returns {Promise}\r\n     */\r\n    async fetch(query={}) {\r\n\r\n        /** Accept an arrow function as 'where' condition */\r\n        if (isArrowFunction(query)) {\r\n            query = { where: query };\r\n        }\r\n\r\n        let chain = Promise.resolve(query);\r\n        if (!this._model.isConnected) {\r\n            chain = chain.then(query => this.connect(query))\r\n        }\r\n\r\n        /**\r\n         * Before fetch\r\n         * @event ModelProxy#beforeFetch\r\n         * @property {object} query Query object containing, where, orderby, start and limit properties.\r\n         * @property {function} query.where A where arrow function definition.\r\n         * @property {function} query.orderby A record order by definition arrow function.\r\n         * @property {int} query.start The record start index, used in pagination mostly.\r\n         * @property {int} query.limit The maximum number of records to return.\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeFetchEvent = new AsyncEvent('beforeFetch', this, { query });\r\n\r\n        /**\r\n         * After fetch\r\n         * @event ModelProxy#afterFetch\r\n         * @property {object} result A query result object containing records fetched.\r\n         * @property {Array} result.rows Records fetched.\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        chain = chain.then(query => beforeFetchEvent.wait(query))\r\n            .then(query => this._model.fetch(query))\r\n            .then(result => new AsyncEvent('afterFetch', this, { result }).wait(result));\r\n\r\n        if (this.options.autoDisconnect) {\r\n            chain = chain.then(this.disconnect);\r\n        }\r\n\r\n        return chain;\r\n    }\r\n\r\n    /**\r\n     * Updates an array of data\r\n     * @param {Array} rows\r\n     * @fires beforeUpdate Before disconnecting event.\r\n     * @fires afterUpdate After disconnecting event.\r\n     * @returns {Promise}\r\n     */\r\n    async update(rows) {\r\n        let chain = Promise.resolve(rows);\r\n        if (!this._model.isConnected) {\r\n            chain = chain.then(rows => this.connect(rows))\r\n        }\r\n\r\n        /**\r\n         * Before update\r\n         * @event ModelProxy#beforeUpdate\r\n         * @property { Array } rows Array of records to update.\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeUpdateEvent = new AsyncEvent('beforeUpdate', this, { rows });\r\n\r\n        /**\r\n         * After update\r\n         * @event ModelProxy#afterUpdate\r\n         * @property { Array } rows Array of updated records.\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        chain = chain.then(rows => beforeUpdateEvent.wait(rows))\r\n            .then(rows => this._model.update(rows))\r\n            .then(rows => new AsyncEvent('afterUpdate', this, { rows }).wait(rows))\r\n\r\n        if (this.options.autoDisconnect) {\r\n            chain = chain.then(result => this.disconnect(result));\r\n        }\r\n\r\n        return chain;\r\n    }\r\n\r\n    /**\r\n     * Creates a list of records.\r\n     * @param {Array} rows \r\n     * @fires beforeCreate Before disconnecting event.\r\n     * @fires afterCreate After disconnecting event.\r\n     * @returns {Promise} List of records created.\r\n     */\r\n    async create(rows) {\r\n        let chain = Promise.resolve(rows);\r\n        if (!this._model.isConnected) {\r\n            chain = chain.then(rows => this.connect(rows))\r\n        }\r\n\r\n        /**\r\n         * Before create\r\n         * @event ModelProxy#beforeCreate\r\n         * @property {Array} rows Array of records to create.\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeCreateEvent = new AsyncEvent('beforeCreate', this, { rows });\r\n\r\n        /**\r\n         * After create\r\n         * @event ModelProxy#aftereCreate\r\n         * @property {Array} rows Array of created records.\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        chain = chain.then(rows => beforeCreateEvent.wait(rows))\r\n            .then(rows => this._model.create(rows))\r\n            .then(rows => new AsyncEvent('afterCreate', this, { rows }).wait(rows));\r\n\r\n        if (this.options.autoDisconnect) {\r\n            chain = chain.then(result => this.disconnect(result));\r\n        }\r\n\r\n        return chain;\r\n    }\r\n\r\n    /**\r\n     * Delete records by ids\r\n     * @param {Array} ids The records ids to delete.\r\n     * @fires beforeDelete Before disconnecting event.\r\n     * @fires afterDelete After disconnecting event.\r\n     * @returns {Promise}\r\n     */\r\n    async delete(ids) {\r\n        let chain = Promise.resolve(ids);\r\n\r\n        if (!this._model.isConnected) {\r\n            chain = chain.then(ids => this._model.connect(ids))\r\n        }\r\n\r\n        /**\r\n         * Before delete\r\n         * @event ModelProxy#beforeDelete\r\n         * @property {Array} ids The record ids to delete.\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeDeleteEvent = new AsyncEvent('beforeDelete', this, { ids });\r\n\r\n        /**\r\n         * After delete\r\n         * @event ModelProxy#aftereDelete\r\n         * @property {Array} ids The record ids deleted.\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        chain = chain.then(ids => beforeDeleteEvent.wait(ids))\r\n            .then(ids => this._model.delete(ids))\r\n            .then(ids => new AsyncEvent('afterDelete', this, { ids }).wait(ids));\r\n\r\n        if (this.options.autoDisconnect) {\r\n            chain = chain.then(result => this.disconnect(result));\r\n        }\r\n\r\n        return chain;\r\n    }\r\n}","import * as queryUtils from './queryUtils';\r\nimport { Schema } from './schema';\r\nimport { ModelBase } from './modelBase';\r\nimport { ArrayModel } from './models/array';\r\nimport { ModelProxy } from './modelProxy';\r\n\r\nexport function createModel(options) {\r\n    return new ModelProxy(options);\r\n}\r\n\r\nexport { ModelProxy, queryUtils, Schema, ModelBase, ArrayModel };"],"names":["asc","col","a","b","desc","multiColSort","orderby","constructor","Array","fn","shift","result","length","isArrowFunction","fnSrc","toString","test","Schema","options","validate","field","value","ModelBase","EventEmitter","isConnected","connect","data","Promise","resolve","disconnect","fetch","query","rows","total","update","create","delete","ArrayModel","_data","_connected","where","start","limit","success","undefined","i","row","Object","assign","matchCondition","push","rowFields","id","description","updated","sort","slice","forEach","find","r","ids","splice","lastId","AsyncEvent","eventName","base","args","_base","_promises","_eventName","await","promise","wait","emit","name","target","bind","all","then","ModelProxy","model","_model","require","beforeConnectEvent","beforeDisconnectEvent","chain","beforeFetchEvent","autoDisconnect","beforeUpdateEvent","beforeCreateEvent","beforeDeleteEvent","createModel"],"mappings":";;;;;;IAAA;;;;;;;;;;AAUA,IAAO,SAASA,GAAT,CAAaC,GAAb,EAAkB;IACrB,WAAO,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IACnB,eAAOD,EAAED,GAAF,IAASE,EAAEF,GAAF,CAAhB;IACH,KAFD;IAGH;;IAED;;;;;;;;;;AAUA,IAAO,SAASG,IAAT,CAAcH,GAAd,EAAmB;IACtB,WAAO,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IACnB,eAAOA,EAAEF,GAAF,IAASC,EAAED,GAAF,CAAhB;IACH,KAFD;IAGH;;IAED;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAO,SAASI,YAAT,CAAsBC,OAAtB,EAA+B;IAClC,QAAIA,QAAQC,WAAR,KAAwBC,KAA5B,EAAmC;IAC/BF,kBAAU,CAACA,OAAD,CAAV;IACH;;IAED,QAAIG,KAAKH,QAAQI,KAAR,EAAT;IACA,WAAO,UAAUR,CAAV,EAAaC,CAAb,EAAgB;IACnB,YAAIQ,SAASF,GAAGP,CAAH,EAAMC,CAAN,CAAb;IACA,YAAIQ,WAAW,CAAX,IAAgBL,QAAQM,MAAR,GAAiB,CAArC,EAAwC;IACpC,mBAAOP,aAAaC,OAAb,EAAsBJ,CAAtB,EAAyBC,CAAzB,CAAP;IACH;;IAED,eAAOQ,MAAP;IACH,KAPD;IAQH;;IAED;;;;;AAKA,IAAO,SAASE,eAAT,CAAyBJ,EAAzB,EAA6B;IAChC,QAAIK,QAAQL,GAAGM,QAAH,EAAZ;IACA,yEAAO,CAAgEC,IAAhE,CAAqEF,KAArE;IAAP;IACH;;;;;;;;;IC9ED;AACA,IAAO,MAAMG,MAAN,CAAa;IAChBV,gBAAYW,OAAZ,EAAqB;IACjB,aAAKA,OAAL,GAAeA,OAAf;IACH;;IAEDC,aAASC,KAAT,EAAgBC,KAAhB,EAAuB;IACnB;IACH;IAPe;;ICCpB,IAAI,MAAM,CAAC;;IAEX;IACA;IACA;IACA,SAAS,aAAa,GAAG,EAAE;IAC3B,aAAa,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;IAE9C,SAAS,YAAY,GAAG;IACxB,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;AACD,AAEA;IACA;IACA;IACA,YAAY,CAAC,YAAY,GAAG,aAAY;;IAExC,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;;IAElC,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC;IAC1C,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC;IAC3C,YAAY,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC;;IAEjD;IACA;IACA,YAAY,CAAC,mBAAmB,GAAG,EAAE,CAAC;;IAEtC,YAAY,CAAC,IAAI,GAAG,WAAW;IAC/B,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,EAAE,IAAI,YAAY,CAAC,YAAY,EAAE;IACjC;IACA,IAAI,IAAI,MAAM,CAAC,MAAM,AAAoC,EAAE,CAEtD;IACL,GAAG;;IAEH,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;IAC7E,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;IACvC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAC1B,GAAG;;IAEH,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,SAAS,CAAC;IACvD,CAAC,CAAC;;IAEF;IACA;IACA,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,eAAe,CAAC,CAAC,EAAE;IACrE,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;IAChD,IAAI,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;IAClE,EAAE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IACzB,EAAE,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;;IAEF,SAAS,gBAAgB,CAAC,IAAI,EAAE;IAChC,EAAE,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS;IACtC,IAAI,OAAO,YAAY,CAAC,mBAAmB,CAAC;IAC5C,EAAE,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;;IAED,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,eAAe,GAAG;IACpE,EAAE,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;IACA,SAAS,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE;IACvC,EAAE,IAAI,IAAI;IACV,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,OAAO;IACP,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;IAC7B,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;IAChC,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,GAAG;IACH,CAAC;IACD,SAAS,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC5C,EAAE,IAAI,IAAI;IACV,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC7B,OAAO;IACP,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;IAC7B,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;IAChC,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,GAAG;IACH,CAAC;IACD,SAAS,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,EAAE,IAAI,IAAI;IACV,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACnC,OAAO;IACP,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;IAC7B,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;IAChC,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1C,GAAG;IACH,CAAC;IACD,SAAS,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1D,EAAE,IAAI,IAAI;IACV,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACzC,OAAO;IACP,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;IAC7B,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;IAChC,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAChD,GAAG;IACH,CAAC;;IAED,SAAS,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC7C,EAAE,IAAI,IAAI;IACV,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,OAAO;IACP,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;IAC7B,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;IAChC,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACrC,GAAG;IACH,CAAC;;IAED,YAAY,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,EAAE;IAClD,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC;AAChD,IACA,EAAE,IAAI,OAAO,IAAI,IAAI,KAAK,OAAO,CAAC,CAAC;;IAEnC,EAAE,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;IACxB,EAAE,IAAI,MAAM;IACZ,IAAI,OAAO,IAAI,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC;IAChD,OAAO,IAAI,CAAC,OAAO;IACnB,IAAI,OAAO,KAAK,CAAC;;IAEjB,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;IAEvB;IACA,EAAE,IAAI,OAAO,EAAE;IACf,IAAI,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,IAAI,MAAM,EAAE;IAChB,MAAM,IAAI,CAAC,EAAE;IACb,QAAQ,EAAE,GAAG,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;IAC9D,MAAM,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,MAAM,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,MAAM,EAAE,CAAC,YAAY,GAAG,KAAK,CAAC;IAC9B,MAAM,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAC/B,KAAK,MAAM,IAAI,EAAE,YAAY,KAAK,EAAE;IACpC,MAAM,MAAM,EAAE,CAAC;IACf,KAAK,MAAM;IACX;IACA,MAAM,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,wCAAwC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;IAC/E,MAAM,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC;IACvB,MAAM,MAAM,GAAG,CAAC;IAChB,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB,GAAG;;IAEH,EAAE,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;;IAEzB,EAAE,IAAI,CAAC,OAAO;IACd,IAAI,OAAO,KAAK,CAAC;;IAEjB,EAAE,IAAI,IAAI,GAAG,OAAO,OAAO,KAAK,UAAU,CAAC;IAC3C,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;IACzB,EAAE,QAAQ,GAAG;IACb;IACA,IAAI,KAAK,CAAC;IACV,MAAM,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,MAAM,MAAM;IACZ,IAAI,KAAK,CAAC;IACV,MAAM,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,MAAM,MAAM;IACZ,IAAI,KAAK,CAAC;IACV,MAAM,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,MAAM,MAAM;IACZ,IAAI,KAAK,CAAC;IACV,MAAM,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/E,MAAM,MAAM;IACZ;IACA,IAAI;IACJ,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAChC,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;IAC9B,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IACnC,MAAM,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1C,GAAG;AACH,AAGA;IACA,EAAE,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;;IAEF,SAAS,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;IACvD,EAAE,IAAI,CAAC,CAAC;IACR,EAAE,IAAI,MAAM,CAAC;IACb,EAAE,IAAI,QAAQ,CAAC;;IAEf,EAAE,IAAI,OAAO,QAAQ,KAAK,UAAU;IACpC,IAAI,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;;IAElE,EAAE,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;IAC1B,EAAE,IAAI,CAAC,MAAM,EAAE;IACf,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;IAClD,IAAI,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;IAC5B,GAAG,MAAM;IACT;IACA;IACA,IAAI,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5B,MAAM,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI;IACrC,kBAAkB,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;;IAEpE;IACA;IACA,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;IAC9B,KAAK;IACL,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5B,GAAG;;IAEH,EAAE,IAAI,CAAC,QAAQ,EAAE;IACjB;IACA,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;IACvC,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC;IAC1B,GAAG,MAAM;IACT,IAAI,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;IACxC;IACA,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAC9D,0CAA0C,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC/D,KAAK,MAAM;IACX;IACA,MAAM,IAAI,OAAO,EAAE;IACnB,QAAQ,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnC,OAAO,MAAM;IACb,QAAQ,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,OAAO;IACP,KAAK;;IAEL;IACA,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;IAC1B,MAAM,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;IACnC,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;IAC7C,QAAQ,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;IAC/B,QAAQ,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,8CAA8C;IACxE,4BAA4B,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,oBAAoB;IAC/E,4BAA4B,iDAAiD,CAAC,CAAC;IAC/E,QAAQ,CAAC,CAAC,IAAI,GAAG,6BAA6B,CAAC;IAC/C,QAAQ,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC;IAC3B,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,QAAQ,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;IAClC,QAAQ,WAAW,CAAC,CAAC,CAAC,CAAC;IACvB,OAAO;IACP,KAAK;IACL,GAAG;;IAEH,EAAE,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,SAAS,WAAW,CAAC,CAAC,EAAE;IACxB,EAAE,OAAO,OAAO,CAAC,IAAI,KAAK,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IACD,YAAY,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE;IAC1E,EAAE,OAAO,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC,CAAC;;IAEF,YAAY,CAAC,SAAS,CAAC,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC;;IAE/D,YAAY,CAAC,SAAS,CAAC,eAAe;IACtC,IAAI,SAAS,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE;IAC7C,MAAM,OAAO,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IACtD,KAAK,CAAC;;IAEN,SAAS,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;IAC3C,EAAE,IAAI,KAAK,GAAG,KAAK,CAAC;IACpB,EAAE,SAAS,CAAC,GAAG;IACf,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnC,IAAI,IAAI,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,IAAI,CAAC;IACnB,MAAM,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACxC,KAAK;IACL,GAAG;IACH,EAAE,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACxB,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;;IAED,YAAY,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE;IAC5D,EAAE,IAAI,OAAO,QAAQ,KAAK,UAAU;IACpC,IAAI,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;IAClE,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;IACjD,EAAE,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;;IAEF,YAAY,CAAC,SAAS,CAAC,mBAAmB;IAC1C,IAAI,SAAS,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE;IACjD,MAAM,IAAI,OAAO,QAAQ,KAAK,UAAU;IACxC,QAAQ,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;IACtE,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;IAClE,MAAM,OAAO,IAAI,CAAC;IAClB,KAAK,CAAC;;IAEN;IACA,YAAY,CAAC,SAAS,CAAC,cAAc;IACrC,IAAI,SAAS,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;IAC5C,MAAM,IAAI,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE,gBAAgB,CAAC;;IAEtD,MAAM,IAAI,OAAO,QAAQ,KAAK,UAAU;IACxC,QAAQ,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;;IAEtE,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;IAC5B,MAAM,IAAI,CAAC,MAAM;IACjB,QAAQ,OAAO,IAAI,CAAC;;IAEpB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAI,CAAC,IAAI;IACf,QAAQ,OAAO,IAAI,CAAC;;IAEpB,MAAM,IAAI,IAAI,KAAK,QAAQ,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,EAAE;IAC9E,QAAQ,IAAI,EAAE,IAAI,CAAC,YAAY,KAAK,CAAC;IACrC,UAAU,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;IAC7C,aAAa;IACb,UAAU,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,UAAU,IAAI,MAAM,CAAC,cAAc;IACnC,YAAY,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC;IACzE,SAAS;IACT,OAAO,MAAM,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;IAC7C,QAAQ,QAAQ,GAAG,CAAC,CAAC,CAAC;;IAEtB,QAAQ,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ;IAClC,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,EAAE;IACnE,YAAY,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IAChD,YAAY,QAAQ,GAAG,CAAC,CAAC;IACzB,YAAY,MAAM;IAClB,WAAW;IACX,SAAS;;IAET,QAAQ,IAAI,QAAQ,GAAG,CAAC;IACxB,UAAU,OAAO,IAAI,CAAC;;IAEtB,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IAC/B,UAAU,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAC9B,UAAU,IAAI,EAAE,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE;IACzC,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;IAC/C,YAAY,OAAO,IAAI,CAAC;IACxB,WAAW,MAAM;IACjB,YAAY,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;IAChC,WAAW;IACX,SAAS,MAAM;IACf,UAAU,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACpC,SAAS;;IAET,QAAQ,IAAI,MAAM,CAAC,cAAc;IACjC,UAAU,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,gBAAgB,IAAI,QAAQ,CAAC,CAAC;IAC1E,OAAO;;IAEP,MAAM,OAAO,IAAI,CAAC;IAClB,KAAK,CAAC;;IAEN,YAAY,CAAC,SAAS,CAAC,kBAAkB;IACzC,IAAI,SAAS,kBAAkB,CAAC,IAAI,EAAE;IACtC,MAAM,IAAI,SAAS,EAAE,MAAM,CAAC;;IAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;IAC5B,MAAM,IAAI,CAAC,MAAM;IACjB,QAAQ,OAAO,IAAI,CAAC;;IAEpB;IACA,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;IAClC,QAAQ,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;IACpC,UAAU,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;IAC7C,UAAU,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAChC,SAAS,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;IACjC,UAAU,IAAI,EAAE,IAAI,CAAC,YAAY,KAAK,CAAC;IACvC,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;IAC/C;IACA,YAAY,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;IAChC,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,OAAO;;IAEP;IACA,MAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;IAClC,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IACnD,UAAU,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,UAAU,IAAI,GAAG,KAAK,gBAAgB,EAAE,SAAS;IACjD,UAAU,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;IACvC,SAAS;IACT,QAAQ,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;IAClD,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;IAC3C,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAC9B,QAAQ,OAAO,IAAI,CAAC;IACpB,OAAO;;IAEP,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;;IAE/B,MAAM,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;IAC3C,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC7C,OAAO,MAAM,IAAI,SAAS,EAAE;IAC5B;IACA,QAAQ,GAAG;IACX,UAAU,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACrE,SAAS,QAAQ,SAAS,CAAC,CAAC,CAAC,EAAE;IAC/B,OAAO;;IAEP,MAAM,OAAO,IAAI,CAAC;IAClB,KAAK,CAAC;;IAEN,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAC,IAAI,EAAE;IAC5D,EAAE,IAAI,UAAU,CAAC;IACjB,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;;IAE5B,EAAE,IAAI,CAAC,MAAM;IACb,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,OAAO;IACP,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,IAAI,CAAC,UAAU;IACnB,MAAM,GAAG,GAAG,EAAE,CAAC;IACf,SAAS,IAAI,OAAO,UAAU,KAAK,UAAU;IAC7C,MAAM,GAAG,GAAG,CAAC,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,CAAC;IAChD;IACA,MAAM,GAAG,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC;IACxC,GAAG;;IAEH,EAAE,OAAO,GAAG,CAAC;IACb,CAAC,CAAC;;IAEF,YAAY,CAAC,aAAa,GAAG,SAAS,OAAO,EAAE,IAAI,EAAE;IACrD,EAAE,IAAI,OAAO,OAAO,CAAC,aAAa,KAAK,UAAU,EAAE;IACnD,IAAI,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACvC,GAAG,MAAM;IACT,IAAI,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG;IACH,CAAC,CAAC;;IAEF,YAAY,CAAC,SAAS,CAAC,aAAa,GAAG,aAAa,CAAC;IACrD,SAAS,aAAa,CAAC,IAAI,EAAE;IAC7B,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;;IAE5B,EAAE,IAAI,MAAM,EAAE;IACd,IAAI,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;;IAElC,IAAI,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;IAC1C,MAAM,OAAO,CAAC,CAAC;IACf,KAAK,MAAM,IAAI,UAAU,EAAE;IAC3B,MAAM,OAAO,UAAU,CAAC,MAAM,CAAC;IAC/B,KAAK;IACL,GAAG;;IAEH,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;;IAED,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,GAAG;IAC1D,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACpE,CAAC,CAAC;;IAEF;IACA,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE;IAChC,EAAE,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;IACvE,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;IACb,CAAC;;IAED,SAAS,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE;IAC5B,EAAE,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1B,EAAE,OAAO,CAAC,EAAE;IACZ,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,EAAE,OAAO,IAAI,CAAC;IACd,CAAC;;IAED,SAAS,eAAe,CAAC,GAAG,EAAE;IAC9B,EAAE,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAClC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IACvC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG;IACH,EAAE,OAAO,GAAG,CAAC;IACb,CAAC;;ICxdD;;;;AAIA,IAAO,MAAMC,SAAN,SAAwBC,YAAxB,CAAoC;IACvC;;;;IAIAhB,gBAAYW,OAAZ,EAAqB;IACjB;IACA,aAAKA,OAAL,GAAeA,OAAf;IACH;;IAED;;;IAGA,QAAIM,WAAJ,GAAkB;IACd,eAAO,KAAP;IACH;;IAED;;;;;IAKA,UAAMC,OAAN,CAAcC,IAAd,EAAoB;IAChB,eAAO,IAAIC,QAAQC,OAAZ,CAAoBF,IAApB,CAAP;IACH;;IAED;;;;;IAKA,UAAMG,UAAN,CAAiBH,IAAjB,EAAuB;IACnB,eAAO,IAAIC,QAAQC,OAAZ,CAAoBF,IAApB,CAAP;IACH;;IAED;;;;;IAKA,UAAMI,KAAN,CAAYC,KAAZ,EAAmB;IACf,eAAO,IAAIJ,QAAQC,OAAZ,CAAoB,EAAEI,MAAM,EAAR,EAAYC,OAAO,CAAnB,EAApB,CAAP;IACH;;IAED;;;;;IAKA,UAAMC,MAAN,CAAaF,IAAb,EAAmB;IACf,eAAO,IAAIL,QAAQC,OAAZ,CAAoB,EAAEI,MAAM,EAAR,EAApB,CAAP;IACH;;IAED;;;;;IAKA,UAAMG,MAAN,CAAaH,IAAb,EAAmB;IACf,eAAO,IAAIL,QAAQC,OAAZ,CAAoB,EAAEI,MAAM,EAAR,EAApB,CAAP;IACH;;IAED;;;;;IAKA,UAAMI,MAAN,CAAaJ,IAAb,EAAmB;IACf,eAAO,IAAIL,QAAQC,OAAZ,CAAoB,EAAEI,MAAM,EAAR,EAApB,CAAP;IACH;;IArEsC;;ICH3C;;;;AAIA,IAAO,MAAMK,UAAN,SAAyBf,SAAzB,CAAmC;IACtCf,gBAAYW,OAAZ,EAAqB;IACjB,cAAMA,OAAN;IACA,aAAKoB,KAAL,GAAa,KAAKpB,OAAL,CAAaQ,IAA1B;IACA,aAAKa,UAAL,GAAkB,KAAlB;IACH;;IAED;;;;IAIA,QAAIf,WAAJ,GAAkB;IACd,eAAO,KAAKe,UAAZ;IACH;;IAED;;;;;;IAMA,UAAMd,OAAN,CAAcC,IAAd,EAAoB;IAChB,eAAO,IAAIC,OAAJ,CAAYC,WAAW;IAC1B,iBAAKW,UAAL,GAAkB,IAAlB;IACA,mBAAOX,QAAQF,IAAR,CAAP;IACH,SAHM,CAAP;IAIH;;IAED;;;;;;IAMA,UAAMG,UAAN,CAAiBH,IAAjB,EAAuB;IACnB,eAAO,IAAIC,OAAJ,CAAYC,WAAW;IAC1B,iBAAKW,UAAL,GAAkB,KAAlB;IACA,mBAAOX,QAAQF,IAAR,CAAP;IACH,SAHM,CAAP;IAIH;;IAED;;;;;;IAMA,UAAMI,KAAN,CAAY,EAAEU,KAAF,EAASlC,OAAT,EAAkBmC,KAAlB,EAAyBC,KAAzB,EAAZ,EAA8C;IAC1C,eAAO,IAAIf,OAAJ,CAAYgB,WAAW;IAC1B,gBAAIhC,SAAS;IACTqB,sBAAM,EADG;IAETC,uBAAO;IAFE,aAAb;;IAKA,gBAAIQ,UAAUG,SAAd,EAAyB;IAAEH,wBAAQ,CAAR;IAAW;IACtC,gBAAIC,UAAUE,SAAd,EAAyB;IAAEF,wBAAQ,EAAR;IAAY;IAGvC,iBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI,KAAKP,KAAL,CAAW1B,MAA/B,EAAuCiC,GAAvC,EAA4C;IACxC,oBAAIC,MAAMC,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKV,KAAL,CAAWO,CAAX,CAAlB,CAAV;;IAEA,oBAAII,iBAAiBT,QAAQA,MAAMM,GAAN,CAAR,GAAqB,IAA1C;IACA,oBAAIG,cAAJ,EAAoB;IAChBtC,2BAAOqB,IAAP,CAAYkB,IAAZ,CAAiBJ,GAAjB;IACH;IACJ;;IAED,gBAAIK,YAAY;IACZC,oBAAI,IADQ;IAEZ/B,uBAAO,OAFK;IAGZgC,6BAAa,aAHD;IAIZC,yBAAS;IAJG,aAAhB;;IAOA,gBAAIhD,OAAJ,EAAa;IACTK,uBAAOqB,IAAP,GAAcrB,OAAOqB,IAAP,CAAYuB,IAAZ,CAAiBlD,aAAaC,QAAQ6C,SAAR,EAAmBnD,GAAnB,EAAwBI,IAAxB,CAAb,CAAjB,CAAd;IACH;;IAEDO,mBAAOqB,IAAP,GAAcrB,OAAOqB,IAAP,CAAYwB,KAAZ,CAAkBf,KAAlB,EAAyBA,QAAQC,KAAjC,CAAd;;IAEA,mBAAOC,QAAQhC,MAAR,CAAP;IACH,SAjCM,CAAP;IAkCH;;IAED;;;;;;IAMA,UAAMuB,MAAN,CAAaR,IAAb,EAAmB;IACf,eAAO,IAAIC,OAAJ,CAAYgB,WAAW;IAC1BjB,iBAAKM,IAAL,CAAUyB,OAAV,CAAkBX,OAAO;;IAErB,qBAAKR,KAAL,CAAWoB,IAAX,CAAgB,CAACC,CAAD,EAAId,CAAJ,KAAU;IACtB,wBAAIc,EAAEP,EAAF,IAAQN,IAAIM,EAAhB,EAAoB;IAChB,6BAAKd,KAAL,CAAWO,CAAX,IAAgBC,GAAhB;IACA,+BAAO,IAAP;IACH;IACJ,iBALD;IAOH,aATD;IAUA,mBAAOH,QAAQjB,IAAR,CAAP;IACH,SAZM,CAAP;IAaH;;IAED;;;;;;IAMA,UAAMU,MAAN,CAAawB,GAAb,EAAkB;IACd,eAAO,IAAIjC,OAAJ,CAAYgB,WAAW;IAC1BiB,gBAAIH,OAAJ,CAAaL,EAAD,IAAQ;IAChB,qBAAKd,KAAL,CAAWoB,IAAX,CAAgB,CAACC,CAAD,EAAId,CAAJ,KAAU;IACtB,wBAAIc,EAAEP,EAAF,IAAQA,EAAZ,EAAgB;IACZ,6BAAKd,KAAL,CAAWuB,MAAX,CAAkBhB,CAAlB,EAAqB,CAArB;IACA,+BAAO,IAAP;IACH;IACJ,iBALD;IAMH,aAPD;;IASA,mBAAOF,QAAQiB,GAAR,CAAP;IACH,SAXM,CAAP;IAYH;;IAED;;;;;;IAMA,UAAMzB,MAAN,CAAaH,IAAb,EAAmB;IACf,eAAO,IAAIL,OAAJ,CAAYgB,WAAW;IAC1B,gBAAImB,SAAS,KAAKxB,KAAL,CAAW,KAAKA,KAAL,CAAW1B,MAAX,GAAoB,CAA/B,EAAkCwC,EAA/C;IACApB,iBAAKyB,OAAL,CAAa,CAACX,GAAD,EAAMD,CAAN,KAAY;IACrBC,oBAAIM,EAAJ,GAAS,EAAEU,MAAX;IACA,qBAAKxB,KAAL,CAAWY,IAAX,CAAgBJ,GAAhB;IACH,aAHD;;IAKAH,oBAAQ,EAAEX,IAAF,EAAR;IACH,SARM,CAAP;IASH;;IA/IqC;;ICJ1C;;;;;;;;;;;;;;;;;;;;AAoBA,IAAO,MAAM+B,UAAN,CAAiB;;IAEpB;;;;;;IAMAxD,gBAAYyD,SAAZ,EAAuBC,IAAvB,EAA6BC,OAAK,EAAlC,EAAsC;IAClC,aAAKC,KAAL,GAAaF,IAAb;IACA,aAAKC,IAAL,GAAYA,IAAZ;IACA,aAAKE,SAAL,GAAiB,EAAjB;IACA,aAAKC,UAAL,GAAkBL,SAAlB;IACH;;IAED;;;;;;IAMAM,UAAMC,OAAN,EAAe;IACX,aAAKH,SAAL,CAAelB,IAAf,CAAoBqB,OAApB;IACH;;IAED;;;;;;;IAOAC,SAAK9C,IAAL,EAAW;IACP,aAAKyC,KAAL,CAAWM,IAAX,CAAgB,KAAKJ,UAArB,EAAiC;IAC7BK,kBAAM,KAAKL,UADkB;IAE7BM,oBAAQ,KAAKR,KAFgB;IAG7BD,kBAAM,KAAKA,IAHkB;IAI7BI,mBAAO,KAAKA,KAAL,CAAWM,IAAX,CAAgB,IAAhB;IAJsB,SAAjC;IAMA,eAAOjD,QAAQkD,GAAR,CAAY,KAAKT,SAAjB,EAA4BU,IAA5B,CAAiC,MAAMpD,IAAvC,CAAP;IACH;IAxCmB;;IA2CxB;;;;AAIA,IAAO,MAAMqD,UAAN,SAAyBzD,SAAzB,CAAmC;;IAEtC;;;;;IAKAf,gBAAYW,OAAZ,EAAqB;IACjB,cAAMA,OAAN;;IAEA,aAAKA,OAAL,GAAe6B,OAAOC,MAAP,CAAc,EAAd,EACZ9B,OADY,CAAf;;IAGA,YAAI,OAAOA,QAAQ8D,KAAf,IAAwB,QAA5B,EAAsC;IAClC,iBAAKC,MAAL,GAAc,IAAIC,OAAJ,CAAYhE,QAAQ8D,KAApB,EAA2B9D,OAA3B,CAAd;IACH,SAFD,MAEO;IACH,iBAAK+D,MAAL,GAAc,IAAI/D,QAAQ8D,KAAZ,CAAkB9D,OAAlB,CAAd;IACH;IACJ;;IAED;;;;;;;IAOA,UAAMO,OAAN,CAAcC,IAAd,EAAoB;IAChB;;;;;IAKA,YAAIyD,qBAAqB,IAAIpB,UAAJ,CAAe,eAAf,EAAgC,IAAhC,EAAsC,EAAtC,CAAzB;;IAEA;;;;;;IAMA,eAAOoB,mBAAmBX,IAAnB,CAAwB9C,IAAxB,EACFoD,IADE,CACGpD,QAAQ,KAAKuD,MAAL,CAAYxD,OAAZ,CAAoBC,IAApB,CADX,EAEFoD,IAFE,CAEGpD,QAAQ,IAAIqC,UAAJ,CAAe,cAAf,EAA+B,IAA/B,EAAqC,EAArC,EAAyCS,IAAzC,CAA8C9C,IAA9C,CAFX,CAAP;IAGH;;IAED;;;;;;;IAOA,UAAMG,UAAN,CAAiBH,IAAjB,EAAuB;IACnB;;;;;IAKA,YAAI0D,wBAAwB,IAAIrB,UAAJ,CAAe,kBAAf,EAAmC,IAAnC,EAAyC,EAAzC,CAA5B;;IAEA;;;;;;IAMA,eAAOqB,sBAAsBZ,IAAtB,CAA2B9C,IAA3B,EACFoD,IADE,CACGpD,QAAQ,KAAKuD,MAAL,CAAYpD,UAAZ,CAAuBH,IAAvB,CADX,EAEFoD,IAFE,CAEGpD,QAAQ,IAAIqC,UAAJ,CAAe,iBAAf,EAAkC,IAAlC,EAAwC,EAAxC,EAA4CS,IAA5C,CAAiD9C,IAAjD,CAFX,CAAP;IAGH;;IAED;;;;;;;;IAQA,UAAMI,KAAN,CAAYC,QAAM,EAAlB,EAAsB;;IAElB;IACA,YAAIlB,gBAAgBkB,KAAhB,CAAJ,EAA4B;IACxBA,oBAAQ,EAAES,OAAOT,KAAT,EAAR;IACH;;IAED,YAAIsD,QAAQ1D,QAAQC,OAAR,CAAgBG,KAAhB,CAAZ;IACA,YAAI,CAAC,KAAKkD,MAAL,CAAYzD,WAAjB,EAA8B;IAC1B6D,oBAAQA,MAAMP,IAAN,CAAW/C,SAAS,KAAKN,OAAL,CAAaM,KAAb,CAApB,CAAR;IACH;;IAED;;;;;;;;;;IAUA,YAAIuD,mBAAmB,IAAIvB,UAAJ,CAAe,aAAf,EAA8B,IAA9B,EAAoC,EAAEhC,KAAF,EAApC,CAAvB;;IAEA;;;;;;;;IAQAsD,gBAAQA,MAAMP,IAAN,CAAW/C,SAASuD,iBAAiBd,IAAjB,CAAsBzC,KAAtB,CAApB,EACH+C,IADG,CACE/C,SAAS,KAAKkD,MAAL,CAAYnD,KAAZ,CAAkBC,KAAlB,CADX,EAEH+C,IAFG,CAEEnE,UAAU,IAAIoD,UAAJ,CAAe,YAAf,EAA6B,IAA7B,EAAmC,EAAEpD,MAAF,EAAnC,EAA+C6D,IAA/C,CAAoD7D,MAApD,CAFZ,CAAR;;IAIA,YAAI,KAAKO,OAAL,CAAaqE,cAAjB,EAAiC;IAC7BF,oBAAQA,MAAMP,IAAN,CAAW,KAAKjD,UAAhB,CAAR;IACH;;IAED,eAAOwD,KAAP;IACH;;IAED;;;;;;;IAOA,UAAMnD,MAAN,CAAaF,IAAb,EAAmB;IACf,YAAIqD,QAAQ1D,QAAQC,OAAR,CAAgBI,IAAhB,CAAZ;IACA,YAAI,CAAC,KAAKiD,MAAL,CAAYzD,WAAjB,EAA8B;IAC1B6D,oBAAQA,MAAMP,IAAN,CAAW9C,QAAQ,KAAKP,OAAL,CAAaO,IAAb,CAAnB,CAAR;IACH;;IAED;;;;;;IAMA,YAAIwD,oBAAoB,IAAIzB,UAAJ,CAAe,cAAf,EAA+B,IAA/B,EAAqC,EAAE/B,IAAF,EAArC,CAAxB;;IAEA;;;;;;;IAOAqD,gBAAQA,MAAMP,IAAN,CAAW9C,QAAQwD,kBAAkBhB,IAAlB,CAAuBxC,IAAvB,CAAnB,EACH8C,IADG,CACE9C,QAAQ,KAAKiD,MAAL,CAAY/C,MAAZ,CAAmBF,IAAnB,CADV,EAEH8C,IAFG,CAEE9C,QAAQ,IAAI+B,UAAJ,CAAe,aAAf,EAA8B,IAA9B,EAAoC,EAAE/B,IAAF,EAApC,EAA8CwC,IAA9C,CAAmDxC,IAAnD,CAFV,CAAR;;IAIA,YAAI,KAAKd,OAAL,CAAaqE,cAAjB,EAAiC;IAC7BF,oBAAQA,MAAMP,IAAN,CAAWnE,UAAU,KAAKkB,UAAL,CAAgBlB,MAAhB,CAArB,CAAR;IACH;;IAED,eAAO0E,KAAP;IACH;;IAED;;;;;;;IAOA,UAAMlD,MAAN,CAAaH,IAAb,EAAmB;IACf,YAAIqD,QAAQ1D,QAAQC,OAAR,CAAgBI,IAAhB,CAAZ;IACA,YAAI,CAAC,KAAKiD,MAAL,CAAYzD,WAAjB,EAA8B;IAC1B6D,oBAAQA,MAAMP,IAAN,CAAW9C,QAAQ,KAAKP,OAAL,CAAaO,IAAb,CAAnB,CAAR;IACH;;IAED;;;;;;IAMA,YAAIyD,oBAAoB,IAAI1B,UAAJ,CAAe,cAAf,EAA+B,IAA/B,EAAqC,EAAE/B,IAAF,EAArC,CAAxB;;IAEA;;;;;;;IAOAqD,gBAAQA,MAAMP,IAAN,CAAW9C,QAAQyD,kBAAkBjB,IAAlB,CAAuBxC,IAAvB,CAAnB,EACH8C,IADG,CACE9C,QAAQ,KAAKiD,MAAL,CAAY9C,MAAZ,CAAmBH,IAAnB,CADV,EAEH8C,IAFG,CAEE9C,QAAQ,IAAI+B,UAAJ,CAAe,aAAf,EAA8B,IAA9B,EAAoC,EAAE/B,IAAF,EAApC,EAA8CwC,IAA9C,CAAmDxC,IAAnD,CAFV,CAAR;;IAIA,YAAI,KAAKd,OAAL,CAAaqE,cAAjB,EAAiC;IAC7BF,oBAAQA,MAAMP,IAAN,CAAWnE,UAAU,KAAKkB,UAAL,CAAgBlB,MAAhB,CAArB,CAAR;IACH;;IAED,eAAO0E,KAAP;IACH;;IAED;;;;;;;IAOA,UAAMjD,MAAN,CAAawB,GAAb,EAAkB;IACd,YAAIyB,QAAQ1D,QAAQC,OAAR,CAAgBgC,GAAhB,CAAZ;;IAEA,YAAI,CAAC,KAAKqB,MAAL,CAAYzD,WAAjB,EAA8B;IAC1B6D,oBAAQA,MAAMP,IAAN,CAAWlB,OAAO,KAAKqB,MAAL,CAAYxD,OAAZ,CAAoBmC,GAApB,CAAlB,CAAR;IACH;;IAED;;;;;;IAMA,YAAI8B,oBAAoB,IAAI3B,UAAJ,CAAe,cAAf,EAA+B,IAA/B,EAAqC,EAAEH,GAAF,EAArC,CAAxB;;IAEA;;;;;;;IAOAyB,gBAAQA,MAAMP,IAAN,CAAWlB,OAAO8B,kBAAkBlB,IAAlB,CAAuBZ,GAAvB,CAAlB,EACHkB,IADG,CACElB,OAAO,KAAKqB,MAAL,CAAY7C,MAAZ,CAAmBwB,GAAnB,CADT,EAEHkB,IAFG,CAEElB,OAAO,IAAIG,UAAJ,CAAe,aAAf,EAA8B,IAA9B,EAAoC,EAAEH,GAAF,EAApC,EAA6CY,IAA7C,CAAkDZ,GAAlD,CAFT,CAAR;;IAIA,YAAI,KAAK1C,OAAL,CAAaqE,cAAjB,EAAiC;IAC7BF,oBAAQA,MAAMP,IAAN,CAAWnE,UAAU,KAAKkB,UAAL,CAAgBlB,MAAhB,CAArB,CAAR;IACH;;IAED,eAAO0E,KAAP;IACH;IA/OqC;;IChEnC,SAASM,WAAT,CAAqBzE,OAArB,EAA8B;IACjC,WAAO,IAAI6D,UAAJ,CAAe7D,OAAf,CAAP;IACH;;;;;;;;;;;;;;;;;"}