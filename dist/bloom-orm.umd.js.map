{"version":3,"file":"bloom-orm.umd.js","sources":["../src/queryUtils.js","../src/schema.js","../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../src/modelBase.js","../src/modelProxy.js","../src/models/array.js","../src/errors.js","../src/utils.js","../src/models/rest.js","../src/expressions.js","../src/astTransforms/index.js","../src/astTransforms/frappe.js","../src/models/frappeDoctype.js","../src/main.js"],"sourcesContent":["/**\r\n * This is the default implementation of a query ascending behaviour.\r\n * Usually, custom models may replace this function generate their internal\r\n * query language.\r\n * @example\r\n * // used on a fetch query on some model.\r\n * model.fetch({ orderby: r => asc(r.id) });\r\n * @param {string} col The column to order in ascending order\r\n * @returns {function} A comparison function to use between two objects\r\n */\r\nexport function asc(col) {\r\n    return function (a, b) {\r\n        return a[col] - b[col];\r\n    }\r\n}\r\n\r\n/**\r\n * This is the default implementation of a query descending behaviour.\r\n * Usually, custom models may replace this function generate their internal\r\n * query language.\r\n * @example\r\n * // used on a fetch query on some model.\r\n * model.fetch({ orderby: r => desc(r.id) });\r\n * @param {string} col The column to order in descending order\r\n * @returns {function} A comparison function to use between two objects\r\n */\r\nexport function desc(col) {\r\n    return function (a, b) {\r\n        return b[col] - a[col];\r\n    }\r\n}\r\n\r\n/**\r\n * Helper function. It accumulates an array of asc or desc calls to implement\r\n * multi column sorting for local stores. It is usually used internally and should\r\n * not be used outside of building custom models.\r\n * @example\r\n * // multi column sorting\r\n * [\r\n *  {a: 1, b:1}, \r\n *  {a:1, b: 2}, \r\n *  {a: 2, b:1}, \r\n *  {a: 2, b: 2}\r\n * ].sort(multiColSort([asc('a'), desc('b')]))\r\n * // result:\r\n * [\r\n *  {a: 1, b: 2},\r\n *  {a: 1, b: 1},\r\n *  {a: 2, b: 2},\r\n *  {a: 2, b: 1}\r\n * ]\r\n * @param {Array} orderby An array or single asc/desc function to accumulate\r\n * @returns {function} A comparison function which combines the provided array of sort functions.\r\n */\r\nexport function multiColSort(orderby) {\r\n    if (orderby.constructor !== Array) {\r\n        orderby = [orderby];\r\n    }\r\n\r\n    let fn = orderby.shift();\r\n    return function (a, b) {\r\n        let result = fn(a, b);\r\n        if (result === 0 && orderby.length > 0) {\r\n            return multiColSort(orderby)(a, b);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} fn A value to test if is considered an arrow function.\r\n * @returns {boolean} true or false\r\n */\r\nexport function isArrowFunction(fn) {\r\n    let fnSrc = fn.toString();\r\n    return (/^\\s*(\\(\\s*\\)|\\([a-z0-9_=,\\s+\\{\\}\\.]+\\)|[a-z0-9_\\.]+)\\s*=>.+/).test(fnSrc);\r\n}","// TODO: Implement model schema definitions to automate validation\r\nexport class Schema {\r\n    constructor(options) {\r\n        this.options = options;\r\n    }\r\n\r\n    validate(field, value) {\r\n        // TODO: validate agaisnt json schema\r\n    }\r\n}","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import { EventEmitter } from 'events';\r\n\r\n/**\r\n * Base Model abstract class. All models should implement all methods on this class.\r\n * @extends EventEmitter\r\n */\r\nexport class ModelBase extends EventEmitter{\r\n    /**\r\n     * \r\n     * @param {*} options\r\n     */\r\n    constructor(options) {\r\n        super();\r\n        this.options = Object.assign({\r\n            primary_key: 'id'\r\n        }, options);\r\n    }\r\n\r\n    /**\r\n     * @returns {Promise} Resolves if connected else rejects.\r\n     */\r\n    async isConnected() {\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Connects the model to its backend.\r\n     * @param {*} data Any object to pass along when Promise chained.\r\n     * @returns {Promise} A promise resolved once the model's backend is connected.\r\n     */\r\n    async connect(data) {\r\n        return new Promise.resolve(data);\r\n    }\r\n\r\n    /**\r\n     * Disconnects the model from its backend\r\n     * @param {*} data Any object to pass along when Promise chained.\r\n     * @returns {Promise} A promise resolved once the model's backend is disconnected.\r\n     */\r\n    async disconnect(data) {\r\n        return new Promise.resolve(data);\r\n    }\r\n\r\n    /**\r\n     * Data fetch method. Accepts either a 'where' arrow function or more complex\r\n     * object containing where, orderby, start, limit options.\r\n     * @param {*} query \r\n     */\r\n    async fetch(query) {\r\n        return new Promise.resolve({ rows: [], total: 0 });\r\n    }\r\n\r\n    /**\r\n     * Updates an array of data\r\n     * @param {Array} rows\r\n     * @returns {Promise}\r\n     */\r\n    async update(rows) {\r\n        return new Promise.resolve({ rows: [] });\r\n    }\r\n\r\n    /**\r\n     * Creates a list of records.\r\n     * @param {Array} rows \r\n     * @returns {Promise} List of records created.\r\n     */\r\n    async create(rows) {\r\n        return new Promise.resolve({ rows: [] });\r\n    }\r\n\r\n    /**\r\n     * Delete records by ids\r\n     * @param {Array} ids The records ids to delete.\r\n     * @returns {Promise}\r\n     */\r\n    async delete(rows) {\r\n        return new Promise.resolve({ rows: [] });\r\n    }\r\n\r\n}","import { isArrowFunction } from './queryUtils';\r\nimport { ModelBase } from './modelBase';\r\n\r\n/**\r\n * A convenient event argument container that allows async processing for subscribing events.\r\n * @example\r\n * // simple event\r\n * let EventEmitter = require('event');\r\n * let emitter = new EventEmitter();\r\n * let e = new AsyncEvent('myevent', emitter, { a: 1});\r\n * emitter.on('myevent', e => {\r\n *   // emulate a long running promise,\r\n *   // any event that requies pausing further flow can insert a promise.\r\n *   e.await(new Promise(resolve => {\r\n *     setTimeout(resolve, 5000);\r\n *   }));\r\n * })\r\n * \r\n * // triggers events and waits until all event promises resolve\r\n * e.wait().then(() => {\r\n *  console.log(\"Called after all event promises are resolved\");\r\n * })\r\n */\r\nexport class AsyncEvent {\r\n\r\n    /**\r\n     * \r\n     * @param {string} eventName Event Name.\r\n     * @param {*} base EventHandler instance to trigger event in behalve of.\r\n     * @param {*} args Event arguments to pass during event trigger.\r\n     */\r\n    constructor(eventName, base, args={}) {\r\n        this._base = base;\r\n        this.args = args;\r\n        this._promises = [];\r\n        this._eventName = eventName;\r\n    }\r\n\r\n    /**\r\n     * If an event handler needs to run a long running process, this method\r\n     * allows them the insert a promise into a wait queue so implementing code\r\n     * can wait for these promises to resolve or be rejected.\r\n     * @param {Promise} promise A promise to add to our wait list\r\n     */\r\n    await(promise) {\r\n        this._promises.push(promise);\r\n    }\r\n\r\n    /**\r\n     * If event handlers added long running promisses through the await function this method can be used\r\n     * to chain more processes that should only run after these event promises have resolved.\r\n     * @param {*} data A convenient way to enable this method to be chained. \r\n     *                 Any data passed will be passed along untouched down at the end of the wait promise.\r\n     * @returns {Promise} A promise which will pass the provided data object if passed.\r\n     */\r\n    wait(data) {\r\n        this._base.emit(this._eventName, {\r\n            name: this._eventName,\r\n            target: this._base,\r\n            args: this.args,\r\n            await: this.await.bind(this)\r\n        });\r\n        return Promise.all(this._promises).then(() => data);\r\n    }\r\n}\r\n\r\n/**\r\n * A model facade class that encapsulates promise handling and connection management.\r\n * @extends ModelBase\r\n */\r\nexport class ModelProxy extends ModelBase {\r\n\r\n    /**\r\n     * \r\n     * @param {object} options Model configuration\r\n     * @param {(constructor|string)} options.adapter Adapter constructor to load or instantiate.\r\n     * @param {string} options.primary_key The field name of the model's primary key (default: 'id')\r\n     * @param {object} options.schema A json schema object defining the fields of the model. Not all models require it as usually this would al ready exists for selfcontained models.\r\n     * @param {boolean} options.autoDisconnect If true, an extra call to disconnect() will be added to the promise chain.\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        if (typeof this.options.model == 'string') {\r\n            this._model = new require(this.options.model)(options);\r\n        } else {\r\n            this._model = new options.model(this.options);\r\n        }\r\n    }\r\n\r\n    get primaryKey() {\r\n        return this.options.primary_key;\r\n    }\r\n\r\n    recordDecorator(record) {\r\n        record.$id = record[this.options.primary_key];\r\n        return record;\r\n    }\r\n\r\n    async isConnected(data) {\r\n        return this._model.isConnected(data);\r\n    }\r\n\r\n    /**\r\n     * Connects the model to its backend.\r\n     * @param {*} data Any object to pass along when Promise chained.\r\n     * @fires beforeConnect Before connecting event.\r\n     * @fires afterConnect After connecting event.\r\n     * @returns {Promise} A promise resolved once the model's backend is connected.\r\n     */\r\n    async connect(data) {\r\n        /**\r\n         * Before connecting\r\n         * @event ModelProxy#beforeConnect\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeConnectEvent = new AsyncEvent('beforeConnect', this, {});\r\n\r\n        /**\r\n         * After connecting\r\n         * @event ModelProxy#afterConnect\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        return beforeConnectEvent.wait(data)\r\n            .then(data => this._model.connect(data))\r\n            .then(data => new AsyncEvent('afterConnect', this, {}).wait(data))\r\n    }\r\n\r\n    /**\r\n     * Disconnects the model from its backend\r\n     * @param {*} data Any object to pass along when Promise chained.\r\n     * @fires beforeDisconnect Before disconnecting event.\r\n     * @fires afterDisconnect After disconnecting event.\r\n     * @returns {Promise} A promise resolved once the model's backend is disconnected.\r\n     */\r\n    async disconnect(data) {\r\n        /**\r\n         * Before disconnecting\r\n         * @event ModelProxy#beforeDisconnect\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeDisconnectEvent = new AsyncEvent('beforeDisconnect', this, {});\r\n\r\n        /**\r\n         * After disconnecting\r\n         * @event ModelProxy#aftereDisconnect\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        return beforeDisconnectEvent.wait(data)\r\n            .then(data => this._model.disconnect(data))\r\n            .then(data => new AsyncEvent('afterDisconnect', this, {}).wait(data))\r\n    }\r\n\r\n    /**\r\n     * Data fetch method. Accepts either a 'where' arrow function or more complex\r\n     * object containing where, orderby, start, limit options.\r\n     * @param {(function|object)} query Query arrow function or object containing query definition.\r\n     * @param {function} query.where An arror function defining where operation(an arrow function is required)\r\n     * @param {function} query.orderby An arrow function defining sorting(an arrow function is required)\r\n     * @param {int} query.start Pagination start index\r\n     * @param {int} query.limit Pagination record length\r\n     * @fires beforeFetch Before disconnecting event.\r\n     * @fires afterFetch After disconnecting event.\r\n     * @returns {Promise.<object>} When fulfilled promise returns: { rows: <Array>, total: <int> }\r\n     */\r\n    async fetch(query={}) {\r\n\r\n        /** Accept an arrow function as 'where' condition */\r\n        if (isArrowFunction(query)) {\r\n            query = { where: query };\r\n        }\r\n\r\n        if ( !('limit' in query) ) {\r\n            query.limit = 20;\r\n        }\r\n\r\n        if (!('start' in query)) {\r\n            query.start = 0;\r\n        }\r\n\r\n        let chain = this._model.isConnected(query)\r\n            .catch(() => {\r\n                return this.connect(query)\r\n            })\r\n\r\n        /**\r\n         * Before fetch\r\n         * @event ModelProxy#beforeFetch\r\n         * @property {object} query Query object containing, where, orderby, start and limit properties.\r\n         * @property {function} query.where A where arrow function definition.\r\n         * @property {function} query.orderby A record order by definition arrow function.\r\n         * @property {int} query.start The record start index, used in pagination mostly.\r\n         * @property {int} query.limit The maximum number of records to return.\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeFetchEvent = new AsyncEvent('beforeFetch', this, { query });\r\n\r\n        /**\r\n         * After fetch\r\n         * @event ModelProxy#afterFetch\r\n         * @property {object} result A query result object containing records fetched.\r\n         * @property {Array} result.rows Records fetched.\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        chain = chain.then(query => beforeFetchEvent.wait(query))\r\n            .then(query => this._model.fetch(query))\r\n            .then(result => new AsyncEvent('afterFetch', this, { result }).wait(result));\r\n\r\n        if (this.options.autoDisconnect) {\r\n            chain = chain.then(result => this.disconnect(result));\r\n        }\r\n\r\n        return chain;\r\n    }\r\n\r\n    /**\r\n     * Updates an array of data\r\n     * @param {(object|Array)} data  object containing a 'rows' array key with records to update. You may also pass just an array of rows.\r\n     * @param {Array} data.rows  object containing a 'rows' array key with records to update. You may also pass just an array of rows.\r\n     * @fires beforeUpdate Before disconnecting event.\r\n     * @fires afterUpdate After disconnecting event.\r\n     * @returns {Promise.<object>} When fulfilled promise returns: { rows: <Array> }\r\n     */\r\n    async update(data) {\r\n\r\n        if (data.constructor == Array ) {\r\n            data = { rows: data };\r\n        }\r\n\r\n        let chain = this._model.isConnected(data)\r\n            .catch(() => {\r\n                return this.connect(data)\r\n            })\r\n\r\n\r\n        /**\r\n         * Before update\r\n         * @event ModelProxy#beforeUpdate\r\n         * @property { object } data \r\n         * @property { Array } data.rows Array of records to update.\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeUpdateEvent = new AsyncEvent('beforeUpdate', this, data);\r\n\r\n        /**\r\n         * After update\r\n         * @event ModelProxy#afterUpdate\r\n         * @property { object } data \r\n         * @property { Array } data.rows Array of updated records.\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        chain = chain.then(data => beforeUpdateEvent.wait(data))\r\n            .then(data => this._model.update(data))\r\n            .then(data => new AsyncEvent('afterUpdate', this, data).wait(data))\r\n\r\n        if (this.options.autoDisconnect) {\r\n            chain = chain.then(result => this.disconnect(result));\r\n        }\r\n\r\n        return chain;\r\n    }\r\n\r\n    /**\r\n     * Creates a list of records.\r\n     * @param {(object|Array)} data Either an Array of records or an object containing an Array key named 'rows'.\r\n     * @param {Array} data.rows Array containing records to create.\r\n     * @fires beforeCreate Before disconnecting event.\r\n     * @fires afterCreate After disconnecting event.\r\n     * @returns {Promise.<object>} List of records created. Object signature: { rows: <Array> }\r\n     */\r\n    async create(data) {\r\n\r\n        if ( data.constructor == Array ) {\r\n            data = { rows: data };\r\n        }\r\n\r\n        let chain = this._model.isConnected(data)\r\n            .catch(() => {\r\n                return this.connect(data)\r\n            })\r\n\r\n        /**\r\n         * Before create\r\n         * @event ModelProxy#beforeCreate\r\n         * @property {object} data Object with records to create.\r\n         * @property {Array} data.rows Records to create.\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeCreateEvent = new AsyncEvent('beforeCreate', this, data);\r\n\r\n        /**\r\n         * After create\r\n         * @event ModelProxy#aftereCreate\r\n         * @property {Array} data Object containing new records.\r\n         * @property {Array} data.rows Array of records created.\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        chain = chain.then(data => beforeCreateEvent.wait(data))\r\n            .then(data => this._model.create(data))\r\n            .then(data => new AsyncEvent('afterCreate', this, data).wait(data));\r\n\r\n        if (this.options.autoDisconnect) {\r\n            chain = chain.then(result => this.disconnect(result));\r\n        }\r\n\r\n        return chain;\r\n    }\r\n\r\n    /**\r\n     * Delete records by ids\r\n     * @param {Array} ids The records ids to delete.\r\n     * @fires beforeDelete Before disconnecting event.\r\n     * @fires afterDelete After disconnecting event.\r\n     * @returns {Promise.<Array>} When fulfilled promise returns an array of deleted ids.\r\n     */\r\n    async delete(ids) {\r\n        let chain = this._model.isConnected(ids)\r\n            .catch(() => {\r\n                return this.connect(ids)\r\n            })\r\n\r\n\r\n        /**\r\n         * Before delete\r\n         * @event ModelProxy#beforeDelete\r\n         * @property {object} data \r\n         * @property {Array} data.ids The record ids to delete.\r\n         * @type {AsyncEvent}\r\n         */\r\n        let beforeDeleteEvent = new AsyncEvent('beforeDelete', this, { ids });\r\n\r\n        /**\r\n         * After delete\r\n         * @event ModelProxy#aftereDelete\r\n         * @property {object} data\r\n         * @property {Array} data.ids The record ids deleted.\r\n         * @type {AsyncEvent}\r\n         */\r\n\r\n        chain = chain.then(ids => beforeDeleteEvent.wait(ids))\r\n            .then(ids => this._model.delete(ids))\r\n            .then(ids => new AsyncEvent('afterDelete', this, { ids }).wait(ids));\r\n\r\n        if (this.options.autoDisconnect) {\r\n            chain = chain.then(result => this.disconnect(result));\r\n        }\r\n\r\n        return chain;\r\n    }\r\n}","import { asc, desc, multiColSort } from '../queryUtils';\r\nimport { ModelBase } from '../modelBase';\r\n\r\n/**\r\n * Reference model implementation based on simple object arrays\r\n * @class\r\n * @extends ModelBase\r\n */\r\nexport class ArrayModel extends ModelBase {\r\n    constructor(options) {\r\n        super(options);\r\n        this._data = this.options.data;\r\n        this._connected = false;\r\n    }\r\n\r\n    /**\r\n     * @returns {Promise} Resolves if connected else rejects\r\n     * @override\r\n     */\r\n    async isConnected(data) {\r\n        if ( this._connected ) {\r\n            return Promise.resolve(data);\r\n        }\r\n        return Promise.reject(false);\r\n    }\r\n\r\n    /**\r\n     * To simulate and stay api compliant, this model implements connecting/disconnecting behaviour.\r\n     * @param {*} data \r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async connect(data) {\r\n        return new Promise(resolve => {\r\n            this._connected = true;\r\n            return resolve(data)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * To simulate and stay api compliant, this model implements connecting/disconnecting behaviour.\r\n     * @param {*} data \r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async disconnect(data) {\r\n        return new Promise(resolve => {\r\n            this._connected = false;\r\n            return resolve(data)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetches rows using where, order, start and limit query parameters\r\n     * @param {*} query An object containing a set of query definitions.\r\n     * @param {function} query.where An arror function defining where operation(an arrow function is required)\r\n     * @param {function} query.orderby An arrow function defining sorting(an arrow function is required)\r\n     * @param {int} query.start Pagination start index\r\n     * @param {int} query.limit Pagination record length\r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async fetch({ where, orderby, start, limit }) {\r\n        return new Promise(success => {\r\n            let result = {\r\n                rows: [],\r\n                total: 100\r\n            }\r\n\r\n            if (start === undefined) { start = 0 }\r\n            if (limit === undefined) { limit = 20 }\r\n\r\n            let count = 0;\r\n            for (let i = 0; i < this._data.length; i++) {\r\n                let row = Object.assign({\r\n                    $id: this._data[i][this.options.primary_key]\r\n                }, this._data[i]);\r\n\r\n                let matchCondition = where ? where(row) : true;\r\n                if (matchCondition) {\r\n                    result.rows.push(row);\r\n                }\r\n            }\r\n\r\n            let rowFields = Object.assign({\r\n                $id: this.options.primary_key\r\n            }, this.options.schema.properties);\r\n\r\n            if (orderby) {\r\n                result.rows = result.rows.sort(multiColSort(orderby(rowFields)));\r\n            }\r\n\r\n            result.rows = result.rows.slice(start, start + limit);\r\n\r\n            result.rows.forEach(r => {\r\n                delete r.$id;\r\n            });\r\n\r\n            return success(result);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates rows provided by passing an object containing a \"rows\" array property.\r\n     * @param {*} data Object containing rows in a \"rows\" property\r\n     * @returns {Promise} Returns the provided data with the rows updated.\r\n     * @override\r\n     */\r\n    async update(data) {\r\n        return new Promise(success => {\r\n            data.rows.forEach(row => {\r\n\r\n                this._data.find((r, i) => {\r\n                    if (r.id == row.id) {\r\n                        this._data[i] = row;\r\n                        return true;\r\n                    }\r\n                })\r\n\r\n            });\r\n            return success(data);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Deletes all records matching the provided ids.\r\n     * @param {Array} ids \r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async delete(ids) {\r\n        return new Promise(success => {\r\n            ids.forEach((id) => {\r\n                this._data.find((r, i) => {\r\n                    if (r.id == id) {\r\n                        this._data.splice(i, 1);\r\n                        return true;\r\n                    }\r\n                });\r\n            })\r\n\r\n            return success(ids);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates all the records provided. Returning the same records updated with their identifier.\r\n     * @param {Array} rows Array of records to create\r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async create(data) {\r\n        return new Promise(success => {\r\n            let lastId = this._data[this._data.length - 1].id;\r\n            data.rows.forEach((row, i) => {\r\n                row.id = ++lastId;\r\n                this._data.push(row);\r\n            });\r\n\r\n            success(data);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default ArrayModel;","/**\r\n * A Timeout Error\r\n */\r\nexport class TimeoutError extends Error {\r\n    /**\r\n     * cosntructor\r\n     */\r\n    constructor() {\r\n        super('A timeout has occured');\r\n        this.name = 'TimeoutError';\r\n    }\r\n}\r\n\r\n/**\r\n * Remote Error. Encapsulates the service, a message and remote error stack if available.\r\n */\r\nexport class RemoteError extends Error {\r\n    /**\r\n     * constructor\r\n     * @param {string} service The service or model that threw the exception.\r\n     * @param {string} msg A message indicating the reason.\r\n     * @param {string} stack A stack trace of the remote error if available.\r\n     */\r\n    constructor(service, msg, stack) {\r\n        super(`A remote service error has occured (${service}) => ${msg}`);\r\n        this.name = \"RemoteError\";\r\n        this.service = service;\r\n        this.remoteStack = stack;\r\n    }\r\n}\r\n\r\n/**\r\n * Unexpected remote response Error. Encapsulates service, a sample of the returned data and a message.\r\n */\r\nexport class UnexpectedResponseError extends Error {\r\n    /**\r\n     * \r\n     * @param {string} service The service or model that threw the exception.\r\n     * @param {*} sample A sample of the data returned.\r\n     * @param {string} msg A message indicating the reason.\r\n     */\r\n    constructor(service, sample, msg) {\r\n        super(`Remote service (${service}) responded with unexpected data => ${msg}`);\r\n        this.name = \"UnexpectedRemoteResponse\";\r\n        this.service = service;\r\n        this.sample = sample;\r\n    }\r\n}\r\n\r\n/**\r\n * Mock request error. Encapsulates mock errors thrown on unit test rest services.\r\n */\r\nexport class MockRequestError extends Error {\r\n    /**\r\n     * constructor\r\n     * @param {object} response The response object of the mock request\r\n     * @param {object} request the request object of the mock request\r\n     */\r\n    constructor(response, request) {\r\n        super(`Mock Request Error: ${response.status}: ${response.statusText}`);\r\n        this.response = response;\r\n        this.request = request;\r\n    }\r\n}","/**\r\n * Utility timout function, calls timeoutFn if returned function isn't called without its timeout window.\r\n * @param {functino} fn \r\n * @param {int} timeout \r\n * @param {function} timeoutFn \r\n */\r\nexport function Timeout(fn, timeout, timeoutFn) {\r\n    let timeoutRef = setTimeout(timeoutFn, timeout);\r\n\r\n    return function() {\r\n        clearTimeout(timeoutRef);\r\n        fn.call(fn, arguments);\r\n    }\r\n}\r\n\r\n/**\r\n * Takes a string and padds every line\r\n * @param {string} lines A string containing multiple lines\r\n * @param {int} padding Amount of left padding\r\n * @param {int} skip Number of first lines to skip. (default 1)\r\n */\r\nexport function leftPadLines(lines, padding, skip = 0) {\r\n    lines = JSON.stringify(lines, null, 4).trim().split(\"\\n\");\r\n\r\n    return lines.reduce((c, v, i) => {\r\n        if (i <= skip) {\r\n            return c + v;\r\n        } else {\r\n            return c + \"\\n\" + Array(padding).join(\" \") + v;\r\n        }\r\n    }, '')\r\n}\r\n\r\n/**\r\n * Helper function, capitalizes the first letter of every word in string.\r\n * @param {string} value String to capitalize words.\r\n * @param {int} skip Number of words to skip from begining.\r\n * @return {string}\r\n */\r\nexport function capitalize(value, skip) {\r\n    if (value.constructor !== Array) {\r\n        value = [value];\r\n    }\r\n\r\n    return value.reduce((c, v, i) => {\r\n        if (i <= skip) {\r\n            c.push(v);\r\n        } else {\r\n            c.push(v.charAt(0).toUpperCase() + v.slice(1));\r\n        }\r\n        return c;\r\n    }, []);\r\n}\r\n\r\n/**\r\n * Capitalizes and removes spaces from string. Usually used on fields\r\n * @param {string} value string to normalize\r\n * @return {string}\r\n */\r\nexport function normalizeField(value) {\r\n    return capitalize(value.split(' '), 1).join('');\r\n}\r\n","import { asc, desc, multiColSort } from '../queryUtils';\r\nimport { ModelBase } from '../modelBase';\r\nimport { Schema } from '../schema';\r\nimport { RemoteError } from '../errors';\r\nimport { leftPadLines, normalizeField, capitalize } from '../utils';\r\nconst axios = require('axios');\r\n\r\n/**\r\n * A generic and extensible Rest model.\r\n * @extends ModelBase\r\n */\r\nexport class RestModel extends ModelBase {\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        this._connected = false;\r\n        this.cookies = {};\r\n        this.fields = [];\r\n        this.meta = {\r\n            fields: {\r\n                $id: this.options.primary_key\r\n            }\r\n        }\r\n\r\n        this._http = this.options.http || axios.create({\r\n            validateStatus: function (status) {\r\n                return status >= 200 && status < 300; // default\r\n            }\r\n        });\r\n\r\n        if (this.options.schema) {\r\n            this.fields = Object.keys(this.options.schema.properties);\r\n\r\n            for(let i in this.fields) {\r\n                let field = this.fields[i];\r\n                let normalizedField = normalizeField(field);\r\n                this.meta.fields[normalizedField] = field;\r\n            }\r\n        }\r\n    }\r\n\r\n    getEndPoint(action, options, id, args, data) {\r\n        let argStr = '';\r\n        if ( action == 'fetch' ) {\r\n            let tmpArgs = [];\r\n            for(var k in args) {\r\n                if (args[k] !== undefined) {\r\n                    tmpArgs.push(`${k}=${encodeURIComponent(args[k])}`);\r\n                }\r\n            }\r\n            argStr = tmpArgs.join('&');\r\n        }\r\n        let ACTIONS = {\r\n            connect: {\r\n                url: `${options.baseUrl}/login`,\r\n                method: 'get'\r\n            },\r\n            disconnect: {\r\n                url: `${options.baseUrl}/logout`,\r\n                method: 'get'      \r\n            },\r\n            fetch: {\r\n                url: `${options.baseUrl}/resource/${this.options.resource}${id ? '/' + id : ''}${argStr ? '?' + argStr : ''}`,\r\n                method: 'get'\r\n            },\r\n            create: {\r\n                url: `${options.baseUrl}/resource/${this.options.resource}`,\r\n                method: 'post',\r\n                data\r\n            },\r\n            update: {\r\n                url: `${options.baseUrl}/resource/${this.options.resource}`,\r\n                method: 'put',\r\n                data\r\n            },\r\n            delete: {\r\n                url: `${options.baseUrl}/resource/${this.options.resource}/${id}`,\r\n                method: 'delete'\r\n            },\r\n            default: {\r\n                url: `${options.baseUrl}`,\r\n                method: 'get'\r\n            }\r\n        }\r\n\r\n        let finalAction = null;\r\n        if ( typeof this.options.getEndPoint == 'function' ) {\r\n            finalAction = this.options.getEndPoint(action, options, id);\r\n        } else {\r\n            finalAction = action in ACTIONS ? ACTIONS[action] : ACTIONS.default;\r\n        }\r\n\r\n        if ( this.options.debug ) {\r\n            console.log(\"endPoint: \", finalAction);\r\n        }\r\n\r\n        return finalAction;\r\n    }\r\n\r\n    HTTP(endPoint) {\r\n\r\n        let opts = Object.assign({\r\n            method: 'GET',\r\n            withCredentials: true        \r\n        }, endPoint);\r\n\r\n        if (this.options.debug) {\r\n            console.log('\\nHTTP CALL : ', leftPadLines(endPoint, 14));\r\n            console.log('   - OPTS : ', leftPadLines(opts, 14));\r\n        }\r\n\r\n        return this._http.request(opts);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @returns {Promise} true when connected\r\n     * @override\r\n     */\r\n    async isConnected(data) {\r\n        let isConnectedPromise = null;\r\n        if (typeof this.options.isConnected == 'function') {\r\n            isConnectedPromise = this.options.isConnected();\r\n        } else if ( this._connected ) {\r\n            this.isConnectedPromise = Promise.resolve(data);\r\n        } else {\r\n            this.isConnectedPromise = Promise.reject();\r\n        }\r\n\r\n        return isConnectedPromise.then((data) => {\r\n            this._connected = true;\r\n            return data;\r\n        })\r\n        .catch(() => {\r\n            this._connected = false;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * To simulate and stay api compliant, this model implements connecting/disconnecting behaviour.\r\n     * @param {*} data \r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async connect(data) {\r\n        let connectPromise = null;\r\n        let endPoint = this.getEndPoint('connect', this.options);\r\n\r\n        // allow overwriting connect promise with user version if required.\r\n        if ( this.options.connect ) {\r\n            connectPromise = this.options.connect(endPoint, this.options, this.HTTP.bind(this))\r\n        } else {\r\n            connectPromise = this.HTTP(endPoint);\r\n        }\r\n\r\n        // either way, the promise must return a response that at least contains\r\n        // the status key with the resulting http response code.\r\n        return connectPromise.then(response => {\r\n            this._connected = true;\r\n            return response.data;\r\n        }).catch(err => {\r\n            let response = err.response;\r\n            this._connected = false;\r\n            return Promise.reject(new RemoteError(\"REST\", `${response.status}: ${response.statusText}`, response.data));\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * To simulate and stay api compliant, this model implements connecting/disconnecting behaviour.\r\n     * @param {*} data \r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async disconnect(data) {\r\n        let disconnectPromise = null;\r\n        let endPoint = this.getEndPoint('disconnect', this.options);\r\n        if (this.options.disconnect) {\r\n            disconnectPromise = this.options.disconnect(endPoint, this.options, this.HTTP.bind(this))\r\n        } else {\r\n            disconnectPromise = this.HTTP(endPoint);\r\n        }\r\n\r\n        return disconnectPromise.then(response => {\r\n            if ( response.status == 200) {\r\n                this._connected = false;\r\n                return data;\r\n            } else {\r\n                this._connected = false;\r\n                throw new Error(\"Error while disconnecting\")\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetches rows using where, order, start and limit query parameters\r\n     * @param {*} query An object containing a set of query definitions.\r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async fetch({ where, orderby, start, limit }) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let whereAst, orderbyAst;\r\n\r\n            if ( where ) {\r\n                whereAst = jsep(where.toString());\r\n            }\r\n\r\n            if ( orderby ) {\r\n                orderbyAst = jsep(orderby.toString());\r\n            }\r\n\r\n            let result = {\r\n                rows: [],\r\n                total: 100\r\n            }\r\n\r\n            if (start === undefined) { start = 0 }\r\n            if (limit === undefined) { limit = 20 }\r\n\r\n            \r\n            let endPoint = this.getEndPoint('fetch', this.options);\r\n            return this.HTTP(endPoint);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates rows provided by passing an object containing a \"rows\" array property.\r\n     * @param {*} data Object containing rows in a \"rows\" property\r\n     * @returns {Promise} Returns the provided data with the rows updated.\r\n     * @override\r\n     */\r\n    async update(data) {\r\n        let promises = [];\r\n        data.rows.forEach(row => {\r\n            let endPoint = this.getEndPoint('update', this.options, row.id, null, row);\r\n            promises.push(this.HTTP(endPoint).then(result => { \r\n                return result.data.data \r\n            }));\r\n        });\r\n\r\n        return Promise.all(promises).then(results => {\r\n            return {\r\n                rows: results\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Deletes all records matching the provided ids.\r\n     * @param {Array} ids \r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async delete(ids) {\r\n        let promises = [];\r\n        ids.forEach(id => {\r\n            let endPoint = this.getEndPoint('delete', this.options, id);\r\n            promises.push((function (endPoint, id) { \r\n                return this.HTTP(endPoint).then(result => {\r\n                    return id;\r\n                }).catch(err => {\r\n                    return {\r\n                        id,\r\n                        errorMessage: \"Error deleting record\",\r\n                        debug: err\r\n                    }\r\n                });\r\n            }.bind(this))(endPoint, id));\r\n        });\r\n\r\n        return Promise.all(promises).then(results => {\r\n            return {\r\n                rows: results\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates all the records provided. Returning the same records updated with their identifier.\r\n     * @param {Array} rows Array of records to create\r\n     * @returns {Promise}\r\n     * @override\r\n     */\r\n    async create(data) {\r\n        let promises = [];\r\n        data.rows.forEach(row => {\r\n            let endPoint = this.getEndPoint('create', this.options, null, null, row);\r\n            promises.push(this.HTTP(endPoint).then(result => {\r\n                return result.data.data\r\n            }));\r\n        });\r\n\r\n        return Promise.all(promises).then(results => {\r\n            return {\r\n                rows: results\r\n            };\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default RestModel;","const jsep = require('jsep');\r\njsep.addBinaryOp(\"^\");\r\njsep.addUnaryOp('@');\r\njsep.removeBinaryOp(\">>>\");\r\njsep.removeBinaryOp(\"<<<\");\r\njsep.removeUnaryOp(\"~\");\r\n\r\nexport class ExpressionBuilder {\r\n    constructor(options) {\r\n        this.options = options;\r\n        this.ast = null;\r\n    }\r\n\r\n    parse(expOrArrowFn) {\r\n        let src = expOrArrowFn.toString();\r\n        let rx = /([^=>]+)\\s*=>\\s*(.+)/gi\r\n        let result = rx.exec(src);\r\n        this.ast = jsep(result[2]);\r\n        return this;\r\n    }\r\n\r\n    transform(transform) {\r\n        if ( !transform  ) {\r\n            transform = this.options.transform;\r\n        }\r\n\r\n        return transform.run(this.ast);\r\n    }\r\n\r\n}","\r\nexport class AstTransform {\r\n    constructor(state, opts) {\r\n        this.state = state;\r\n        this.options = Object.assign({\r\n            debug: false,\r\n            allowBinaryExpressions: true,\r\n            allowLogicalExpressions: true,\r\n            allowMemberExpressions: true,\r\n            allowCallExpressions: true,\r\n            allowLiterals: true,\r\n            allowIdentifier: true,\r\n            allowArrayExpression: false\r\n        }, opts);\r\n    }\r\n\r\n    run(ast) {\r\n        if ( this.options.debug ) {\r\n            console.log(JSON.stringify(ast, null, '  '));\r\n        }\r\n\r\n        let expFn = this.buildAstFnTree(ast);\r\n        return expFn();\r\n    }\r\n\r\n    buildAstFnTree(ast) {       \r\n        let expFn = null;\r\n        if (ast.type == 'BinaryExpression' && this.options.allowBinaryExpressions ) {\r\n            expFn = this.onBinaryExpression.bind(this, \r\n                ast.operator,\r\n                this.buildAstFnTree(ast.left),\r\n                this.buildAstFnTree(ast.right)\r\n            );\r\n        } else if (ast.type == 'LogicalExpression' && this.options.allowLogicalExpressions ) {\r\n            expFn = this.onLogicalExpression.bind(this,\r\n                ast.operator,\r\n                this.buildAstFnTree(ast.left),\r\n                this.buildAstFnTree(ast.right)\r\n            );\r\n        } else if (ast.type == 'MemberExpression' && this.options.allowMemberExpressions ) {\r\n            expFn = this.onMemberExpression.bind(this,\r\n                ast.computed,\r\n                this.buildAstFnTree(ast.object),\r\n                this.buildAstFnTree(ast.property)\r\n            );\r\n        } else if (ast.type == 'Identifier' && this.options.allowIdentifier ) {\r\n            expFn = this.onIdentifier.bind(this,\r\n                ast.name\r\n            );\r\n        } else if (ast.type == 'Literal' && this.options.allowLiterals ) {\r\n            expFn = this.onLiteral.bind(this,\r\n                ast.value,\r\n                ast.raw\r\n            );\r\n        } else if (ast.type == 'CallExpression' && this.options.allowCallExpressions ) {\r\n            let args = ast.arguments.reduce((c, v) => {\r\n                c.push(this.buildAstFnTree(v));\r\n                return c;\r\n            }, []);\r\n\r\n            expFn = this.onCallExpression.bind(this,\r\n                this.buildAstFnTree(ast.callee),\r\n                args\r\n            );\r\n        } else if (ast.type == \"ArrayExpression\" && this.options.allowArrayExpression) {\r\n            let elements = ast.elements.reduce((c, v) => {\r\n                c.push(this.buildAstFnTree(v));\r\n                return c;\r\n            }, []);\r\n            expFn = this.onArrayExpression.bind(this, elements);\r\n        } else {\r\n            throw new Error(`Unhandled ast type: ${ast.type}`);\r\n        }\r\n\r\n        return expFn;\r\n    }\r\n\r\n    onArrayExpression(elements) {\r\n        var elResolved = elements.reduce((c, v) => {\r\n            let value = v();\r\n            if (typeof value == 'string') {\r\n                value = JSON.stringify(value);\r\n            }\r\n            c.push(value);\r\n            return c;\r\n        }, []);\r\n\r\n        return elResolved.join(', ');\r\n    }\r\n\r\n    onLogicalExpression(op, left, right) {\r\n\r\n        return `${left()} ${op} ${right()}`;\r\n    }\r\n\r\n    onBinaryExpression(op, left, right) {\r\n        let rightValue = right();\r\n        if ( typeof rightValue == 'string' ) {\r\n            rightValue = JSON.stringify(rightValue);\r\n        }\r\n        return `${left()} ${op} ${rightValue}`;\r\n    }\r\n\r\n    onCallExpression(callee, args) {\r\n        var argsResolved = args.reduce((c, v) => {\r\n            let value = v();\r\n            if ( typeof value == 'string' ) {\r\n                value = JSON.stringify(value);\r\n            }\r\n            c.push(value);\r\n            return c;\r\n        }, []);\r\n        return `${callee()}(${argsResolved.join(', ')})`;\r\n    }\r\n\r\n    onMemberExpression(computed, obj, property) {\r\n        if (computed) {\r\n            let objInst = obj();\r\n            let comp = property();\r\n            let objValue = objInst[comp];\r\n            return objValue;\r\n        } else {\r\n            let objKey = obj();\r\n            let objInst = this.state[objKey];\r\n            let objValue = objInst[property()];\r\n            return objValue;\r\n        }\r\n    }\r\n\r\n    onIdentifier(name) {\r\n        return name;\r\n    }\r\n\r\n    onLiteral(value, raw) {\r\n        return value;\r\n    }\r\n}","import { AstTransform } from '../astTransforms';\r\n\r\nexport default class FrappeRestQueryAstTransform extends AstTransform {\r\n\r\n    run(ast) {\r\n        let result = super.run(ast);\r\n\r\n        if ( typeof this.options.finalize == 'function' ) {\r\n            return this.options.finalize(result);\r\n        } else {\r\n            if ( result.charAt(1) != '[' ) {\r\n                result = `[${result}]`;\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    onArrayExpression(elements) {\r\n        var elResolved = elements.reduce((c, v) => {\r\n            let value = v();\r\n            c.push(value);\r\n            return c;\r\n        }, []);\r\n\r\n        return elResolved.join(', ');\r\n    }\r\n\r\n    onLogicalExpression(op, left, right) {\r\n        if ( op != '&&' ) {\r\n            new new Error(`Unsupported operator: ${op}`)\r\n        }\r\n        return `[${left()}, ${right()}]`;\r\n    }\r\n\r\n    onBinaryExpression(op, left, right) {\r\n        return `[\"${left()}\", \"${op}\", ${right()}]`;\r\n    }\r\n\r\n    onCallExpression(callee, args) {\r\n        let calleeName = callee().toLowerCase();\r\n        if ( calleeName == 'like' ) {\r\n            let field = args[0]();\r\n            let match = args[1]();\r\n            if ( typeof match == 'string' ) {\r\n                match = JSON.stringify(match);\r\n            }\r\n            return `[\"${field}\", \"LIKE\", ${match}]`;\r\n        } else if ( calleeName == 'asc' ) {\r\n            let field = args[0]();\r\n            return `${field} ASC`;\r\n        } else if (calleeName == 'desc') {\r\n            let field = args[0]();\r\n            return `${field} DESC`;\r\n        }\r\n    }\r\n\r\n    onMemberExpression(computed, obj, property) {\r\n        if (computed) {\r\n            let objInst = obj();\r\n            let comp = property();\r\n            let objValue = objInst[comp];\r\n            return objValue;\r\n        } else {\r\n            let objKey = obj();\r\n            let objInst = this.state[objKey];\r\n            let objValue = objInst[property()];\r\n            return objValue;\r\n        }\r\n    }\r\n\r\n}","import RestModel from './rest';\r\nimport { ExpressionBuilder } from '../expressions';\r\nimport FrappeRestQueryAstTransform from '../astTransforms/frappe';\r\nimport { RemoteError, UnexpectedResponseError } from '../errors';\r\n\r\n/**\r\n * A generic model which wraps Frappe's REST api for their Doctypes.\r\n * @package thirdparty.models\r\n * @extends RestModel\r\n */\r\nexport class FrappeDoctypeModel extends RestModel {\r\n\r\n    /**\r\n     * \r\n     * @param {object} options \r\n     */\r\n    constructor(options) {\r\n        super(Object.assign({\r\n        }, options));\r\n    }\r\n\r\n    /**\r\n     * Overwrites rest getEndPoint\r\n     * @param {string} action \r\n     * @param {object} options \r\n     * @param {*} id \r\n     * @param {object} args \r\n     * @param {*} data \r\n     */\r\n    getEndPoint(action, options, id, args, data) {\r\n        let argStr = '';\r\n        if (action == 'fetch') {\r\n            let tmpArgs = [];\r\n            for (var k in args) {\r\n                if ( args[k] !== undefined ) {\r\n                    tmpArgs.push(`${k}=${encodeURIComponent(args[k])}`);\r\n                }\r\n            }\r\n            argStr = tmpArgs.join('&');\r\n        }\r\n\r\n        let ACTIONS = {\r\n            connect: {\r\n                url: `${options.baseUrl}/api/method/login?usr=${encodeURIComponent(options.auth.usr)}&pwd=${encodeURIComponent(options.auth.pwd)}`,\r\n                method: 'get'\r\n            },\r\n            disconnect: {\r\n                url: `${options.baseUrl}/api/method/logout`,\r\n                method: 'get'\r\n            },\r\n            fetch: {\r\n                url: `${options.baseUrl}/api/resource/${encodeURIComponent(options.resource)}${id ? '/' + id : ''}${argStr ? '?' + argStr : ''}`,\r\n                method: 'get'\r\n            },\r\n            create: {\r\n                url: `${options.baseUrl}/api/resource/${encodeURIComponent(options.resource)}`,\r\n                method: 'post',\r\n                data\r\n            },\r\n            update: {\r\n                url: `${options.baseUrl}/api/resource/${encodeURIComponent(options.resource)}/${id}`,\r\n                method: 'put',\r\n                data\r\n            },\r\n            delete: {\r\n                url: `${options.baseUrl}/api/resource/${encodeURIComponent(options.resource)}/${id}`,\r\n                method: 'delete',\r\n            },\r\n            method: {\r\n                url: `${options.baseUrl}/api/method/${id}`,\r\n                method: 'get'\r\n            },\r\n            default: {\r\n                url: `${options.baseUrl}`,\r\n                method: 'get'\r\n            }\r\n\r\n        }\r\n\r\n        return action in ACTIONS ? ACTIONS[action] : ACTIONS.default;\r\n    }\r\n\r\n    /**\r\n     * Parses frappe server responses for error messages.\r\n     * @param {object} response \r\n     * @param {string} label \r\n     */\r\n    handleFrappeErrors(response, label) {\r\n        let rx = /(?:\\<pre\\>)([^<]+)(?:\\<\\/pre\\>)/ig;\r\n        let matches = rx.exec(response.data);\r\n        let remoteTrace = matches[1].trim().split(\"\\n\");\r\n        let msg = remoteTrace[remoteTrace.length - 1];\r\n        throw new RemoteError((this.options.name || 'Frappe') + (label?`[${label}]`:''), msg, remoteTrace);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} data \r\n     * @override\r\n     */\r\n    async isConnected(data) {\r\n        let endPoint = this.getEndPoint('method', this.options, 'frappe.auth.get_logged_user');\r\n        return this.HTTP(endPoint).then(response => {\r\n                if (response.status == 200) {\r\n                    return data;\r\n                } else {\r\n                    throw new Error(response.status);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {(function|object)} query \r\n     * @override\r\n     */\r\n    async fetch({where, orderby, start, limit}) {\r\n\r\n        let filters,\r\n            order_by,\r\n            fields=JSON.stringify(this.fields),\r\n            builder = new ExpressionBuilder({\r\n                transform: new FrappeRestQueryAstTransform({\r\n                    r: this.meta.fields\r\n                })\r\n            }),\r\n            orderBuilder = new ExpressionBuilder({\r\n                transform: new FrappeRestQueryAstTransform({\r\n                    r: this.meta.fields\r\n                }, {\r\n                    allowArrayExpression: true,\r\n                    allowLogicalOperators: false,\r\n                    allowBinaryOperators: false,\r\n                    finalize(output) {\r\n                        return JSON.stringify(output);\r\n                    }\r\n                })\r\n            });\r\n\r\n        if ( where ) {\r\n            filters = builder.parse(where).transform();\r\n        }\r\n\r\n        if ( orderby ) {\r\n            order_by = orderBuilder.parse(orderby).transform();\r\n        }\r\n\r\n        let fetchArgs = {\r\n            fields,\r\n            filters,\r\n            order_by,\r\n            limit_start: start,\r\n            limit_page_length: limit\r\n        };\r\n        let fetchEndPoint = this.getEndPoint('fetch', this.options, null, fetchArgs);\r\n\r\n        let totalArgs = {\r\n            fields: JSON.stringify([\"count(*) as total\"]),\r\n            filters,\r\n            order_by\r\n        };\r\n        let totalEndPoint = this.getEndPoint('fetch', this.options, null, totalArgs);\r\n        return Promise.all([\r\n            this.HTTP(fetchEndPoint),\r\n            this.HTTP(totalEndPoint)])\r\n            .then(responses => {\r\n                let fetchResponse = responses[0],\r\n                    totalResponse = responses[1],\r\n                    result = {\r\n                        rows: null,\r\n                        total: 0\r\n                    };\r\n\r\n                // fetch results\r\n                if (fetchResponse.status == 200) {\r\n                    if (typeof fetchResponse.data != 'object') {\r\n                        // something went wrong, needle could not parse returned json\r\n                        throw new UnexpectedResponseError(this.name || \"Frappe\", fetchResponse.body, \"Could not parse response from service\");\r\n                    }\r\n\r\n                    result.rows = fetchResponse.data.data;\r\n                } else {\r\n                    this.handleFrappeErrors(fetchResponse, \"Error while parsing fetch row results.\");\r\n                }\r\n\r\n                // fetch query count\r\n                if (totalResponse.status == 200) {\r\n                    if (typeof totalResponse.data != 'object') {\r\n                        // something went wrong, needle could not parse returned json\r\n                        throw new UnexpectedResponseError(this.name || \"Frappe\", totalResponse.body, \"Could not parse response from service\");\r\n                    }\r\n\r\n                    result.total = totalResponse.data.data[0].total\r\n                } else {\r\n                    this.handleFrappeErrors(totalResponse, \"Error while parsing fetch total results.\");\r\n                }\r\n\r\n                return result;\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport default FrappeDoctypeModel;","import * as queryUtils from './queryUtils';\r\nimport { Schema } from './schema';\r\nimport { ModelBase } from './modelBase';\r\nimport { ModelProxy } from './modelProxy';\r\nimport ArrayModel from './models/array';\r\nimport RestModel from './models/rest';\r\nimport FrappeDoctypeModel from './models/frappeDoctype';\r\nimport * as astTransforms from './astTransforms';\r\nimport FrappeRestQueryAstTransform from './astTransforms/frappe';\r\nimport * as errors from './errors';\r\n\r\nexport function createModel(options) {\r\n    return new ModelProxy(options);\r\n}\r\n\r\nconst transforms = {\r\n    astTransforms,\r\n    FrappeRestQueryAstTransform\r\n}\r\n\r\nexport { \r\n    ModelProxy, \r\n    queryUtils, \r\n    Schema, \r\n    ModelBase, \r\n    ArrayModel, \r\n    RestModel, \r\n    FrappeDoctypeModel,\r\n    transforms,\r\n    errors\r\n};"],"names":["asc","col","a","b","desc","multiColSort","orderby","constructor","Array","fn","shift","result","length","isArrowFunction","fnSrc","toString","test","Schema","options","validate","field","value","ModelBase","EventEmitter","Object","assign","primary_key","isConnected","Promise","reject","connect","data","resolve","disconnect","fetch","query","rows","total","update","create","delete","AsyncEvent","eventName","base","args","_base","_promises","_eventName","await","promise","push","wait","emit","name","target","bind","all","then","ModelProxy","model","_model","require","primaryKey","recordDecorator","record","$id","beforeConnectEvent","beforeDisconnectEvent","where","limit","start","chain","catch","beforeFetchEvent","autoDisconnect","beforeUpdateEvent","beforeCreateEvent","ids","beforeDeleteEvent","ArrayModel","_data","_connected","success","undefined","i","row","matchCondition","rowFields","schema","properties","sort","slice","forEach","r","find","id","splice","lastId","TimeoutError","Error","RemoteError","service","msg","stack","remoteStack","UnexpectedResponseError","sample","MockRequestError","response","request","status","statusText","leftPadLines","lines","padding","skip","JSON","stringify","trim","split","reduce","c","v","join","capitalize","charAt","toUpperCase","normalizeField","axios","RestModel","cookies","fields","meta","_http","http","validateStatus","keys","normalizedField","getEndPoint","action","argStr","tmpArgs","k","encodeURIComponent","ACTIONS","url","baseUrl","method","resource","default","finalAction","debug","console","log","HTTP","endPoint","opts","withCredentials","isConnectedPromise","connectPromise","err","disconnectPromise","whereAst","orderbyAst","jsep","promises","results","errorMessage","addBinaryOp","addUnaryOp","removeBinaryOp","removeUnaryOp","ExpressionBuilder","ast","parse","expOrArrowFn","src","rx","exec","transform","run","AstTransform","state","allowBinaryExpressions","allowLogicalExpressions","allowMemberExpressions","allowCallExpressions","allowLiterals","allowIdentifier","allowArrayExpression","expFn","buildAstFnTree","type","onBinaryExpression","operator","left","right","onLogicalExpression","onMemberExpression","computed","object","property","onIdentifier","onLiteral","raw","arguments","onCallExpression","callee","elements","onArrayExpression","elResolved","op","rightValue","argsResolved","obj","objInst","comp","objValue","objKey","FrappeRestQueryAstTransform","finalize","calleeName","toLowerCase","match","FrappeDoctypeModel","auth","usr","pwd","handleFrappeErrors","label","matches","remoteTrace","filters","order_by","builder","orderBuilder","allowLogicalOperators","allowBinaryOperators","output","fetchArgs","limit_start","limit_page_length","fetchEndPoint","totalArgs","totalEndPoint","responses","fetchResponse","totalResponse","body","createModel","transforms","astTransforms"],"mappings":"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"}